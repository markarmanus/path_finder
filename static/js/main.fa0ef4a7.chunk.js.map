{"version":3,"sources":["Constants/Textures.js","Components/Texture.js","Constants/Constants.js","Constants/Config.js","Components/Character.js","AStar.js","HelperFunctions.js","Components/Grid.js","Constants/BreakPoints.js","Components/Footer.js","Constants/Levels.js","Components/App.js","serviceWorker.js","index.js","Components/AppRoute.js"],"names":["TEXTURES","OBSIDIAN","LAVA","PLAYER_RUNNING","PLAYER_IDLE","PLAYER_UP","PLAYER_DOWN","THIEF_IDLE","THIEF_UP","THIEF_DOWN","THIEF_RUNNING","WALL","HEALTH_PACK","TRANSPARENT","TEXTURE_DATA","1","animationSpeed","animated","spriteWidth","spriteHeight","numberOfSprites","src","2","3","4","5","6","7","8","9","10","11","12","13","Sprite","styled","div","props","textureData","translationTo","keyframes","getAnimation","ProgressBarUnder","textureSize","ProgressBarOver","healthBarPercentage","Texture","state","nextProps","texture","this","x","y","xOffset","yOffset","onMouseDown","onMouseUp","onMouseHoverTextureEnter","onMouseHoverTextureLeave","zIndex","type","style","position","height","width","top","left","overflow","userSelect","undefined","onMouseEnter","onMouseLeave","onTouchEnd","onTouchStart","Component","CONSTANTS","CONFIG","DEFAULT_PLAYER_SPEED","DEFAULT_THIEF_SPEED","DEFAULT_PLAYER_HEALTH","DEFAULT_THIEF_HEALTH","MAIN_APP_COLOR","DEFAULT_SELECTED_LEVEL","DEFAULT_SEARCH_PRIORITY","EDITING_BORDER","CharacterSprite","Character","walking","currentTexture","toUpperCase","currentMovementSpeed","movementSpeed","takeAction","bind","setCorrectTexture","setCorrectDirection","doNextAction","action","getNextAction","typeUpperCase","setState","onRef","character","document","getElementById","inProgress","paused","renderOnScreen","direction","entity","transform","firstChild","stepsCount","Math","floor","remainder","counter","id","setInterval","offsetLeft","offsetTop","clearInterval","onCharacterFinishMove","initialCharacterLocation","onPlaceCharacter","healthBar","currentHealth","maxHealth","costToLocation","from","to","dx","dy","sqrt","isLegalAction","destinationPos","actionType","abs","getActionType","isOutOfBoundaries","gridWidth","gridHeight","isDestinationWall","texturesMap","isHorizontalWall","isVerticalWall","addToOpen","nodeToAdd","open","added","index","length","node","g","health","nodeToAddF","h","splice","push","getPath","parent","getNextThiefAction","actions","start","currentThiefLocation","goal","location","cost","closed","Array","fill","costs","indexOf","max","shift","costSoFar","i","newLocation","costOfLocation","getFurthestLocationFrom","currentPlayerLocation","Node","pop","forEach","newNode","characterType","allowDiagonalActions","concat","followCursor","foundPath","bestPathNode","bestPathFoundHealth","actionsCost","map","playerMaxHealth","currentPlayerHealth","searchPriority","healthPackOnLocation","overLayMap","isLava","calculateBestTextureSize","window","innerHeight","innerWidth","calculateMaxTextureSize","min","calculateMinTextureSize","Container","EditorDoneButton","Button","EditorContainer","expanded","EditorArrow","TextureLabel","Typography","Text","Image","img","Grid","edits","modalMessage","showModal","editorExpanded","finishAfterNextAnimation","initialPlayerLocation","initialThiefLocation","currentThiefHealth","thiefMaxHealth","mouseOverX","mouseOverY","mouseDown","handleHoverWhilePlacingCharacter","getNextCharacterAction","setCharacterCurrentHealth","updateURL","value","capitalized","charAt","slice","e","persist","setSelectedEditTexture","resetCharactersLocation","player","thief","newURLObject","playerSpeed","initialTexturesMap","initialOverLayMap","minHeight","minWidth","thiefSpeed","firstRenderPlayerLocation","firstRenderThiefLocation","history","replaceState","queryString","stringify","arrayFormat","selectedEditTexture","editing","target","includes","parentElement","border","newOverLayMap","newTexturesMap","handleFollowCursor","prevProps","initializeGridWithTextureSize","tMap","oMap","useURL","container","offsetWidth","offsetHeight","playerLocation","thiefLocation","envIsReady","newPosition","editsCopy","editToUndo","texturesMapCopy","overLayMapCopy","addEventListener","characterLocation","currentCharacterHealth","onFinishGame","onClickRestart","levelData","setEditing","isEditingOverLay","ref","el","closable","footer","onClick","title","visible","size","shape","ghost","icon","onClickTexture","isBeingEdited","key","overLayTexture","BREAKPOINTS","FlexDivCenter","StyledText","StyledGitButton","StyledButton","Left","Center","Right","Label","StyledSlider","Slider","SliderContainer","StyledTitle","Title","LeftRightContainer","PlayButton","margin","fontSize","smallScreen","component","onChange","setCharacterMaxHealth","disabled","step","tooltipPlacement","placement","item","speed","setCharacterSpeed","Footer","minTextureSize","maxTextureSize","select","setSelectionRange","execCommand","smallScreenWidth","parseInt","smallScreenHeight","defaultValue","href","copyLinkToClipBoard","level","enableFollowCursor","onClickUndo","ready","onClickResume","onClickPause","onClickStart","getPlayButton","generateLink","setTextureSize","Group","selectedLevel","setSelectedLevel","setSearchPriority","LEVELS","MainContainer","App","params","parseLevelData","search","setAllowDiagonalActions","parse","parseNumbers","parseBooleans","grid","onSelectCustomLevel","message","error","undoEdit","isEditing","Boolean","hostname","match","ReactDOM","render","path","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa0ef4a7.chunk.js","sourcesContent":["export const TEXTURES = {\n  OBSIDIAN: 1,\n  LAVA: 2,\n  PLAYER_RUNNING: 3,\n  PLAYER_IDLE: 4,\n  PLAYER_UP: 5,\n  PLAYER_DOWN: 6,\n  THIEF_IDLE: 7,\n  THIEF_UP: 8,\n  THIEF_DOWN: 9,\n  THIEF_RUNNING: 10,\n  WALL: 11,\n  HEALTH_PACK: 12,\n  TRANSPARENT: 13\n}\nexport const TEXTURE_DATA = {\n  1: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"100px\",\n    spriteHeight: \"100px\",\n    numberOfSprites: 1,\n    src: \"obsidian.png\"\n  },\n  2: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"100px\",\n    spriteHeight: \"100px\",\n    numberOfSprites: 1,\n    src: \"lava.jpg\"\n  },\n  3: {\n    animationSpeed: \"0.3s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Right.png\"\n  },\n  4: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 1,\n    src: \"Character_Idle.png\"\n  },\n  5: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Up.png\"\n  },\n  6: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Down.png\"\n  },\n  7: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 1,\n    src: \"Character_Idle.png\"\n  },\n  8: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Up.png\"\n  },\n  9: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Down.png\"\n  },\n  10: {\n    animationSpeed: \"0.3s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Right.png\"\n  },\n  11: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"10px\",\n    spriteHeight: \"10px\",\n    numberOfSprites: 1,\n    src: \"wall.png\"\n  },\n  12: {\n    animationSpeed: \"0.3s\",\n    animated: true,\n    spriteWidth: \"10px\",\n    spriteHeight: \"10px\",\n    numberOfSprites: 4,\n    src: \"Character_Right.png\"\n  },\n  13: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"10px\",\n    spriteHeight: \"10px\",\n    numberOfSprites: 1,\n    src: \"Transparent.png\"\n  }\n}\n","import React, { Component } from \"react\"\nimport { TEXTURE_DATA } from \"../Constants/Textures\"\nimport styled, { keyframes } from \"styled-components\"\nimport { Progress } from \"antd\"\n\nconst getAnimation = numberOfSprites => {\n  const translationTo = ((numberOfSprites - 1) / numberOfSprites) * 100\n  const transform = keyframes`\n  from { \n    transform: translateX(0); \n  }\n  to { \n    transform: translateX(-${translationTo}%); \n  }\n}\n`\n  return transform\n}\nconst Sprite = styled.div`\n  width: ${props => props.textureData.numberOfSprites * 100}%;\n  height: 100%;\n  background-image: url(${props => props.textureData.src});\n  background-size: 100%, 100%;\n  background-repeat: ${props => (props.textureData.animated ? \"no-repeat\" : \"unset\")};\n  animation: ${props => getAnimation(props.textureData.numberOfSprites)}\n    ${props => props.textureData.animationSpeed}\n    steps(${props => props.textureData.numberOfSprites - 1})\n    ${props => (props.textureData.animated ? \"infinite\" : 0)};\n  position: absolute;\n  user-select: none;\n\n  left: 0;\n  top: 0;\n`\nconst ProgressBarUnder = styled.div`\n  width: 80%;\n  position: relative;\n  background-color: #661918;\n  margin: auto;\n  border-radius: 10px;\n  height: ${props => props.textureSize * 0.1}px;\n  overflow: hidden;\n`\nconst ProgressBarOver = styled.div`\n  width: 100%;\n  position: relative;\n  background-color: #e03836;\n  margin: auto;\n  border-radius: 10px;\n  transition: right 0.5s;\n  right: ${props => 100 - props.healthBarPercentage}%;\n  height: ${props => props.textureSize * 0.1}px;\n`\nexport class Texture extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  shouldComponentUpdate(nextProps) {\n    return (\n      nextProps.texture !== this.props.texture ||\n      nextProps.textureSize !== this.props.textureSize ||\n      nextProps.x !== this.props.x ||\n      nextProps.y !== this.props.y ||\n      nextProps.xOffset !== this.props.xOffset ||\n      nextProps.yOffset !== this.props.yOffset ||\n      nextProps.healthBarPercentage !== this.props.healthBarPercentage\n    )\n  }\n\n  render() {\n    const {\n      yOffset,\n      xOffset,\n      y,\n      x,\n      onMouseDown,\n      onMouseUp,\n      onMouseHoverTextureEnter,\n      onMouseHoverTextureLeave,\n      texture,\n      zIndex,\n      textureSize,\n      healthBarPercentage,\n      type\n    } = this.props\n    const textureData = TEXTURE_DATA[texture]\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          height: textureSize + \"px\",\n          width: textureSize + \"px\",\n          top: yOffset ? y * textureSize + yOffset : y * textureSize,\n          left: xOffset ? x * textureSize + xOffset : x * textureSize,\n          zIndex: zIndex,\n          overflow: \"hidden\",\n          userSelect: \"none\"\n        }}\n      >\n        {healthBarPercentage !== undefined ? (\n          <ProgressBarUnder textureSize={textureSize}>\n            <ProgressBarOver\n              healthBarPercentage={healthBarPercentage}\n              textureSize={textureSize}\n            ></ProgressBarOver>\n          </ProgressBarUnder>\n        ) : null}\n        <Sprite\n          textureData={textureData}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onMouseEnter={onMouseHoverTextureEnter}\n          onMouseLeave={onMouseHoverTextureLeave}\n          onTouchEnd={onMouseUp}\n          onTouchStart={onMouseDown}\n        ></Sprite>\n      </div>\n    )\n  }\n}\n\nexport default Texture\n","export const CONSTANTS = {\n  PLAYER: \"player\",\n  THIEF: \"thief\",\n  OVERLAY: \"overLay\",\n  TEXTURE: \"texture\",\n  HEALTH: \"health\",\n  SPEED: \"speed\"\n}\n","import { CONSTANTS } from \"./Constants\"\n\nexport const CONFIG = {\n  DEFAULT_PLAYER_SPEED: 1,\n  DEFAULT_THIEF_SPEED: 1,\n  DEFAULT_PLAYER_HEALTH: 5,\n  DEFAULT_THIEF_HEALTH: 100,\n  MAIN_APP_COLOR: \"#1b2a41\",\n  DEFAULT_SELECTED_LEVEL: 1,\n  DEFAULT_SEARCH_PRIORITY: CONSTANTS.HEALTH,\n  EDITING_BORDER: \"5px solid purple\"\n}\n","import React, { Component } from \"react\"\nimport Texture from \"./Texture\"\nimport { TEXTURES } from \"../Constants/Textures\"\nimport styled from \"styled-components\"\n\nconst CharacterSprite = styled.div`\n  position: absolute;\n`\nexport class Character extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      walking: false,\n      currentTexture: TEXTURES[props.type.toUpperCase() + \"_IDLE\"],\n      currentMovementSpeed: this.props.movementSpeed\n    }\n    this.takeAction = this.takeAction.bind(this)\n    this.setCorrectTexture = this.setCorrectTexture.bind(this)\n    this.setCorrectDirection = this.setCorrectDirection.bind(this)\n    this.doNextAction = this.doNextAction.bind(this)\n  }\n\n  doNextAction() {\n    let action = this.props.getNextAction(this.props.type)\n    let typeUpperCase = this.props.type.toUpperCase()\n    if (action[0] !== 0 || action[1] !== 0) {\n      this.setState({ walking: true })\n      this.takeAction(action)\n    } else if (this.state.currentTexture !== TEXTURES[typeUpperCase + \"_IDLE\"]) {\n      this.setState({ currentTexture: TEXTURES[typeUpperCase + \"_IDLE\"] })\n    }\n  }\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n  onClickRestart() {\n    let character = document.getElementById(this.props.type)\n    character.style.left = 0\n    character.style.top = 0\n    this.setState({ currentTexture: TEXTURES[this.props.type.toUpperCase() + \"_IDLE\"] })\n  }\n  componentDidUpdate() {\n    if (\n      !this.state.walking &&\n      this.props.inProgress &&\n      !this.props.paused &&\n      this.props.renderOnScreen\n    ) {\n      this.doNextAction()\n    }\n  }\n  setCorrectTexture(direction) {\n    let typeUpperCase = this.props.type.toUpperCase()\n    let texture =\n      direction[1] === -1 && direction[0] === 0\n        ? TEXTURES[typeUpperCase + \"_UP\"]\n        : direction[1] === 1 && direction[0] === 0\n        ? TEXTURES[typeUpperCase + \"_DOWN\"]\n        : TEXTURES[typeUpperCase + \"_RUNNING\"]\n    this.setState({ currentTexture: texture })\n  }\n  setCorrectDirection(entity, direction) {\n    if (entity !== null) {\n      if (direction[0] === -1) {\n        entity.style.transform = \"scaleX(-1)\"\n      } else {\n        entity.style.transform = \"scaleX(1)\"\n      }\n    }\n  }\n  takeAction(direction) {\n    this.setCorrectTexture(direction)\n    let character = document.getElementById(this.props.type)\n    this.setCorrectDirection(character.firstChild, direction)\n    let stepsCount = Math.floor(this.props.textureSize / this.props.movementSpeed)\n    let remainder = this.props.textureSize % this.props.movementSpeed\n\n    let counter = 0\n    this.setState({ currentMovementSpeed: this.props.movementSpeed })\n    var id = setInterval(frame.bind(this), 0)\n    function frame() {\n      if (counter === stepsCount || !this.props.inProgress) {\n        clearInterval(id)\n        character.style.left = character.offsetLeft + direction[0] * remainder + \"px\"\n        character.style.top = character.offsetTop + direction[1] * remainder + \"px\"\n        this.props.onCharacterFinishMove(this.props.type, direction)\n        this.setState({ walking: false })\n      } else {\n        counter++\n        character.style.left =\n          character.offsetLeft + direction[0] * this.state.currentMovementSpeed + \"px\"\n        character.style.top =\n          character.offsetTop + direction[1] * this.state.currentMovementSpeed + \"px\"\n      }\n    }\n  }\n  render() {\n    const {\n      initialCharacterLocation,\n      type,\n      textureSize,\n      xOffset,\n      yOffset,\n      onPlaceCharacter,\n      renderOnScreen,\n      healthBar,\n      currentHealth,\n      maxHealth\n    } = this.props\n    let healthBarPercentage = healthBar ? (currentHealth / maxHealth) * 100 : undefined\n    return (\n      <CharacterSprite id={type}>\n        {initialCharacterLocation !== null && renderOnScreen ? (\n          <Texture\n            x={initialCharacterLocation[0]}\n            y={initialCharacterLocation[1]}\n            healthBarPercentage={healthBarPercentage}\n            textureSize={textureSize}\n            xOffset={xOffset}\n            yOffset={yOffset}\n            type={type}\n            zIndex={2}\n            onMouseDown={() => onPlaceCharacter(type)}\n            texture={this.state.currentTexture}\n          ></Texture>\n        ) : null}\n      </CharacterSprite>\n    )\n  }\n}\n\nexport default Character\n","import { TEXTURES } from \"./Constants/Textures\"\nimport { CONSTANTS } from \"./Constants/Constants\"\nconst costToLocation = (from, to) => {\n  let dx = to[0] - from[0]\n  let dy = to[1] - from[1]\n  let distance = Math.sqrt(dx * dx + dy * dy)\n  return distance * 100\n}\nconst getActionType = action => {\n  return action[0] + action[1] === 0 || Math.abs(action[0] + action[1]) === 2\n    ? \"diagonal\"\n    : \"cardinal\"\n}\nconst isLegalAction = (x, y, action, state) => {\n  const destinationPos = { x: x + action[0], y: y + action[1] }\n  const actionType = getActionType(action)\n  if (isOutOfBoundaries(destinationPos, state.gridWidth, state.gridHeight)) return false\n  const isDestinationWall =\n    state.texturesMap[destinationPos.y * state.gridWidth + destinationPos.x] === TEXTURES.WALL\n  if (actionType === \"diagonal\") {\n    const isHorizontalWall =\n      state.texturesMap[y * state.gridWidth + destinationPos.x] === TEXTURES.WALL\n    const isVerticalWall =\n      state.texturesMap[destinationPos.y * state.gridWidth + x] === TEXTURES.WALL\n\n    return !(isHorizontalWall || isVerticalWall || isDestinationWall)\n  } else {\n    return !isDestinationWall\n  }\n}\nconst addToOpen = (nodeToAdd, open) => {\n  let added = false\n  // check if its already in the open list.\n  for (let index = 0; index < open.length; index++) {\n    let node = open[index]\n    if (\n      nodeToAdd.x === node.x &&\n      nodeToAdd.y === node.y &&\n      nodeToAdd.g >= node.g &&\n      (nodeToAdd.health === null || nodeToAdd.health <= node.health)\n    ) {\n      added = true\n      break\n    }\n  }\n  // if its not already in the open list add where it belongs based on the f value.\n  if (!added) {\n    const nodeToAddF = nodeToAdd.g + nodeToAdd.h\n    // keep going until the f value is more than or qrual to the one in the open list and that where you add the node.\n    for (let index = 0; index < open.length; index++) {\n      const node = open[index]\n      const nodeF = node.g + node.h\n      if (nodeToAddF >= nodeF) {\n        added = true\n        open.splice(index, 0, nodeToAdd)\n        break\n      }\n    }\n  }\n  // if was not added because it the smallest f then add it to the end..\n  if (!added) {\n    open.push(nodeToAdd)\n  }\n}\n\nconst getPath = node => {\n  let action = node.action\n  let parent = node.parent\n  while (parent !== null && parent.action !== null) {\n    action = parent.action\n    parent = parent.parent\n  }\n\n  return action\n}\nconst isOutOfBoundaries = (position, gridWidth, gridHeight) => {\n  return position.x < 0 || position.y < 0 || position.x >= gridWidth || position.y >= gridHeight\n}\nconst leadsToDeadEnd = (initialLocation, actionToLocation, actions, state) => {\n  let newLocation = [\n    initialLocation[0] + actionToLocation[0],\n    initialLocation[1] + actionToLocation[1]\n  ]\n  let open = []\n  let closed = new Array(state.gridWidth * state.gridHeight).fill(false)\n\n  open.push([newLocation, actionToLocation])\n  while (true) {\n    if (open.length === 0) {\n      return true\n    }\n    let node = open.pop()\n    let latestAction = node[1]\n    let location = node[0]\n    if (closed[location[1] * state.gridWidth + location[0]]) continue\n    closed[location[1] * state.gridWidth + location[0]] = true\n    for (let i = 0; i < actions.length; i++) {\n      let action = actions[i]\n      if (action[0] + latestAction[0] === 0 && action[1] + latestAction[1] === 0) continue\n      if (location[0] === initialLocation[0] && location[1] === initialLocation[1]) {\n        return false\n      }\n      if (isLegalAction(location[0], location[1], action, state)) {\n        newLocation = [location[0] + action[0], location[1] + action[1]]\n        open.push([newLocation, action])\n      }\n    }\n  }\n}\nconst getFurthestLocationFrom = (location, actions, state) => {\n  let open = []\n  open.push({ location: location, cost: 0 })\n  let closed = new Array(state.gridWidth * state.gridHeight).fill(false)\n  let costs = new Array(state.gridWidth * state.gridHeight).fill(0)\n  while (true) {\n    if (open.length === 0) {\n      let index = costs.indexOf(Math.max(...costs))\n      let furthestLocation = [index % state.gridWidth, Math.floor(index / state.gridWidth)]\n      return furthestLocation\n    }\n    let node = open.shift()\n    let location = node.location\n    let costSoFar = node.cost\n    let index = location[1] * state.gridWidth + location[0]\n    if (closed[index]) continue\n    closed[index] = true\n    for (let i = 0; i < actions.length; i++) {\n      let action = actions[i]\n      if (isLegalAction(location[0], location[1], action, state)) {\n        let newLocation = [location[0] + action[0], location[1] + action[1]]\n        let costOfLocation = costSoFar + 100\n        // be carful when adding lava there is a problem when there is qual distance to path, and one has lava and the other does not, it will just take the one with the more lava.\n        // if (state.texturesMap[newLocation[1] * state.gridWidth + newLocation[0]] === TEXTURES.LAVA)\n        //   costOfLocation += 100\n        if (closed[newLocation[1] * state.gridWidth + newLocation[0]]) continue\n        open.push({ location: newLocation, cost: costOfLocation })\n        costs[newLocation[1] * state.gridWidth + newLocation[0]] = costOfLocation\n      }\n    }\n  }\n}\nconst playerIsInPath = (node, state, actions) => {\n  let pathLocations = []\n  pathLocations.push([node.x, node.y])\n  let parent = node.parent\n  while (parent !== null) {\n    pathLocations.push([parent.x, parent.y])\n    parent = parent.parent\n  }\n  for (let i = 0; i < pathLocations.length; i++) {\n    let location = pathLocations[i]\n    let xDistance = Math.abs(location[0] - state.currentPlayerLocation[0])\n    let yDistance = Math.abs(location[1] - state.currentPlayerLocation[1])\n    if ((xDistance === 1 && yDistance === 0) || (xDistance === 0 && yDistance === 1)) {\n      return true\n    }\n  }\n  return false\n}\nconst getNextThiefAction = (actions, state) => {\n  let start = state.currentThiefLocation\n  let goal = getFurthestLocationFrom(state.currentPlayerLocation, actions, state)\n  let closed = new Array(state.gridWidth * state.gridHeight).fill(false)\n  if (goal[0] === start[0] && goal[1] === start[1]) return [0, 0]\n  let open = []\n  open.push(new Node(start[0], start[1], null, null, null, 0, costToLocation(start, goal)))\n  while (true) {\n    if (open.length === 0) {\n      return [0, 0]\n    }\n\n    let node = open.pop()\n    if (node.x === goal[0] && node.y === goal[1]) {\n      return getPath(node)\n    }\n\n    // checks if node in closed, where closed is an array with true false values for any state at x,y by accessing index at y * the with + x\n    if (closed[node.y * state.gridWidth + node.x]) {\n      continue\n    }\n\n    closed[node.y * state.gridWidth + node.x] = true\n    actions.forEach((action, index) => {\n      if (isLegalAction(node.x, node.y, action, state)) {\n        const newLocation = { x: node.x + action[0], y: node.y + action[1] }\n        let g = node.g + 100\n        const h = costToLocation([newLocation.x, newLocation.y], goal)\n        const newNode = new Node(newLocation.x, newLocation.y, null, node, action, g, h)\n        addToOpen(newNode, open)\n      }\n    })\n  }\n}\nconst getNextAction = (state, props, characterType) => {\n  let actions = [\n    [0, 1],\n    [0, -1],\n    [1, 0],\n    [-1, 0]\n  ]\n  let diagonalActions = [\n    [1, 1],\n    [-1, 1],\n    [1, -1],\n    [-1, -1]\n  ]\n  if (props.allowDiagonalActions) actions = actions.concat(diagonalActions)\n  if (characterType === CONSTANTS.THIEF && props.followCursor) return [0, 0]\n  if (characterType === CONSTANTS.THIEF) return getNextThiefAction(actions, state)\n  let start = state.currentPlayerLocation\n  let goal = state.currentThiefLocation\n  let foundPath = false\n  let bestPathNode = null\n  let bestPathFoundHealth = 0\n  //edge case when start is the goal.\n  if (start[0] === goal[0] && start[1] === goal[1]) {\n    return [0, 0]\n  }\n\n  let actionsCost = [100, 100, 100, 100, 144, 141, 141, 141]\n  let closed = [...new Array(state.gridWidth * state.gridHeight)].map(() =>\n    new Array(props.playerMaxHealth).fill(false)\n  )\n\n  let open = []\n  open.push(\n    new Node(\n      start[0],\n      start[1],\n      state.currentPlayerHealth,\n      null,\n      null,\n      0,\n      costToLocation(start, goal)\n    )\n  )\n  while (true) {\n    if (open.length === 0) {\n      if (foundPath) {\n        return getPath(bestPathNode)\n      }\n      return [0, 0]\n    }\n\n    let node = open.pop()\n    if (node.x === goal[0] && node.y === goal[1]) {\n      if (node.health === props.playerMaxHealth || props.searchPriority === CONSTANTS.SPEED) {\n        return getPath(node)\n      } else if (node.health > bestPathFoundHealth) {\n        foundPath = true\n        bestPathFoundHealth = node.health\n        bestPathNode = node\n      }\n    }\n\n    // checks if node in closed, where closed is an array with true false values for any state at x,y by accessing index at y * the with + x\n    if (closed[node.y * state.gridWidth + node.x][node.health - 1]) {\n      continue\n    }\n\n    closed[node.y * state.gridWidth + node.x][node.health - 1] = true\n    if (node.health <= 0) continue\n    actions.forEach((action, index) => {\n      if (isLegalAction(node.x, node.y, action, state)) {\n        const newLocation = { x: node.x + action[0], y: node.y + action[1] }\n        let g = node.g + actionsCost[index]\n        const h = costToLocation([newLocation.x, newLocation.y], goal)\n        const healthPackOnLocation =\n          state.overLayMap[newLocation.y * state.gridWidth + newLocation.x] === TEXTURES.HEALTH_PACK\n        const isLava =\n          state.texturesMap[newLocation.y * state.gridWidth + newLocation.x] === TEXTURES.LAVA\n\n        const health = healthPackOnLocation\n          ? props.playerMaxHealth\n          : isLava\n          ? node.health - 1\n          : node.health\n        if (isLava && !healthPackOnLocation) g += 20\n\n        const newNode = new Node(newLocation.x, newLocation.y, health, node, action, g, h)\n        addToOpen(newNode, open)\n      }\n    })\n  }\n}\n\nclass Node {\n  constructor(x, y, health, parent, action, g, h) {\n    this.x = x\n    this.y = y\n    this.health = health\n    this.action = action\n    this.parent = parent\n    this.g = g\n    this.h = h\n  }\n}\nexport default getNextAction\n","const calculateBestTextureSize = window => {\n  const height = window.innerHeight - 300\n  const width = window.innerWidth\n  const higherValue = height > width ? height : width\n\n  return higherValue / 20\n}\nconst calculateMaxTextureSize = window => {\n  const height = window.innerHeight - 300\n  const width = window.innerWidth\n  return Math.floor(Math.min(...[height / 4, width / 4]))\n}\nconst calculateMinTextureSize = window => {\n  const height = window.innerHeight - 300\n  const width = window.innerWidth\n\n  return Math.floor(Math.max(...[height / 50, width / 50]))\n}\nexport { calculateMinTextureSize, calculateBestTextureSize, calculateMaxTextureSize }\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport Texture from \"./Texture\"\nimport { TEXTURES, TEXTURE_DATA } from \"../Constants/Textures\"\nimport { CONFIG } from \"../Constants/Config\"\nimport Character from \"./Character\"\nimport getNextAction from \"../AStar.js\"\nimport { Modal, Button, Typography } from \"antd\"\n\nimport { CONSTANTS } from \"../Constants/Constants\"\nimport queryString from \"query-string\"\nimport {\n  calculateBestTextureSize,\n  calculateMaxTextureSize,\n  calculateMinTextureSize\n} from \"../HelperFunctions\"\n\nconst Container = styled.div`\n  flex: 1;\n  position: relative;\n  background-image: url(\"Background.PNG\");\n`\nconst EditorDoneButton = styled(Button)`\n  border-radius: 20px !important;\n`\nconst EditorContainer = styled.div`\n  width: 80px;\n  height: 380px;\n  position: absolute;\n  display: flex;\n  padding: 15px 0;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  left: ${props => (props.expanded ? 0 : -70)}px;\n  transition: left 1s;\n  top: 185px;\n  border-radius: 10px;\n  z-index: 4;\n  background-color: ${CONFIG.MAIN_APP_COLOR};\n`\nconst EditorArrow = styled(Button)`\n  position: absolute !important;\n  transform: ${props => (props.expanded === \"true\" ? \"rotateZ(-180deg)\" : \"\")};\n  transition: transform 1s;\n  left: 68px;\n  &:focus,\n  &:active {\n    color: white !important;\n    border-color: white !important;\n  }\n  &:hover {\n    color: #40a9ff !important;\n    border-color: #40a9ff !important;\n  }\n  top: 25px;\n`\nconst TextureLabel = styled(Typography.Text)`\n  color: white !important;\n  margin-bottom: 5px;\n`\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 10px;\n  cursor: pointer;\n`\nexport class Grid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      texturesMap: [],\n      overLayMap: [],\n      edits: [],\n      modalMessage: \"\",\n      showModal: false,\n      gridWidth: 0,\n      editorExpanded: true,\n      finishAfterNextAnimation: false,\n      gridHeight: 0,\n      xOffset: 0,\n      yOffset: 0,\n      initialPlayerLocation: null,\n      currentPlayerLocation: null,\n      initialThiefLocation: null,\n      currentThiefLocation: null,\n      currentPlayerHealth: props.playerMaxHealth,\n      currentThiefHealth: props.thiefMaxHealth,\n      mouseOverX: null,\n      mouseOverY: null,\n      mouseDown: false\n    }\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onMouseHoverTextureEnter = this.onMouseHoverTextureEnter.bind(this)\n    this.onMouseHoverTextureLeave = this.onMouseHoverTextureLeave.bind(this)\n    this.onPlaceCharacter = this.onPlaceCharacter.bind(this)\n    this.handleHoverWhilePlacingCharacter = this.handleHoverWhilePlacingCharacter.bind(this)\n    this.getNextCharacterAction = this.getNextCharacterAction.bind(this)\n    this.setCharacterCurrentHealth = this.setCharacterCurrentHealth.bind(this)\n    this.onCharacterFinishMove = this.onCharacterFinishMove.bind(this)\n    this.updateURL = this.updateURL.bind(this)\n  }\n\n  setCharacterCurrentHealth(character, value) {\n    let capitalized = character.charAt(0).toUpperCase() + character.slice(1)\n    this.setState({ [\"current\" + capitalized + \"Health\"]: value })\n  }\n  onMouseDown(e, x, y) {\n    e.persist()\n    this.setState({ mouseDown: true }, () => {\n      this.onMouseHoverTextureEnter(e, x, y)\n    })\n  }\n  onPlaceCharacter() {\n    this.props.setSelectedEditTexture(null)\n  }\n  onMouseUp() {\n    this.setState({ mouseDown: false })\n  }\n  handleHoverWhilePlacingCharacter(characterType, x, y) {\n    if (characterType === TEXTURES.THIEF_IDLE) {\n      this.resetCharactersLocation(CONSTANTS.THIEF)\n      this.setState({ initialThiefLocation: [x, y], currentThiefLocation: [x, y] })\n    }\n    if (characterType === TEXTURES.PLAYER_IDLE) {\n      this.resetCharactersLocation(CONSTANTS.PLAYER)\n      this.setState({ initialPlayerLocation: [x, y], currentPlayerLocation: [x, y] })\n    }\n  }\n  resetCharactersLocation(character) {\n    if (character === CONSTANTS.PLAYER) {\n      let player = document.getElementById(CONSTANTS.PLAYER)\n      player.style.left = 0\n      player.style.top = 0\n    } else {\n      let thief = document.getElementById(CONSTANTS.THIEF)\n      thief.style.left = 0\n      thief.style.top = 0\n    }\n  }\n  handleFollowCursor(x, y) {\n    this.resetCharactersLocation(CONSTANTS.THIEF)\n    this.setState({ initialThiefLocation: [x, y], currentThiefLocation: [x, y] })\n  }\n\n  updateURL() {\n    let newURLObject = {\n      playerSpeed: this.props.playerSpeed,\n      playerMaxHealth: this.props.playerMaxHealth,\n      initialTexturesMap: this.state.texturesMap,\n      searchPriority: this.props.searchPriority,\n      allowDiagonalActions: this.props.allowDiagonalActions,\n      initialOverLayMap: this.state.overLayMap,\n      minHeight: window.innerHeight,\n      minWidth: window.innerWidth,\n      thiefSpeed: this.props.thiefSpeed,\n      textureSize: this.props.textureSize,\n      firstRenderPlayerLocation: this.state.initialPlayerLocation,\n      firstRenderThiefLocation: this.state.initialThiefLocation\n    }\n\n    window.history.replaceState(\n      {},\n      null,\n      \"?\" +\n        queryString.stringify(newURLObject, {\n          arrayFormat: \"comma\"\n        })\n    )\n  }\n\n  onMouseHoverTextureEnter(e, x, y) {\n    const { selectedEditTexture, editing, followCursor } = this.props\n    const { texturesMap, mouseDown, edits, overLayMap } = this.state\n    const index = y * this.state.gridWidth + x\n\n    if (\n      selectedEditTexture === TEXTURES.PLAYER_IDLE ||\n      selectedEditTexture === TEXTURES.THIEF_IDLE\n    ) {\n      this.handleHoverWhilePlacingCharacter(selectedEditTexture, x, y)\n    } else if (editing) {\n      if (e.target !== null && e.type.includes(\"mouse\")) {\n        e.target.parentElement.style.border = CONFIG.EDITING_BORDER\n      }\n      if (selectedEditTexture === TEXTURES.HEALTH_PACK) {\n        if (mouseDown) {\n          let newOverLayMap = overLayMap.slice()\n          newOverLayMap[index] =\n            overLayMap[index] === TEXTURES.HEALTH_PACK ? TEXTURES.TRANSPARENT : selectedEditTexture\n          this.setState({\n            overLayMap: newOverLayMap,\n            mouseOverX: x,\n            mouseOverY: y,\n            mouseDown: false,\n            edits: [...edits, { type: CONSTANTS.OVERLAY, texture: overLayMap[index], x, y }]\n          })\n        } else {\n          this.setState({ mouseOverX: x, mouseOverY: y })\n        }\n      } else if (texturesMap[index] !== selectedEditTexture) {\n        if (mouseDown) {\n          let newTexturesMap = texturesMap.slice()\n          newTexturesMap[index] = selectedEditTexture\n          this.setState({\n            texturesMap: newTexturesMap,\n            mouseOverX: x,\n            mouseOverY: y,\n            edits: [...edits, { type: CONSTANTS.TEXTURE, texture: texturesMap[index], x, y }]\n          })\n        } else {\n          this.setState({ mouseOverX: x, mouseOverY: y })\n        }\n      }\n    } else if (followCursor) {\n      this.handleFollowCursor(x, y)\n    }\n  }\n  onMouseHoverTextureLeave(e) {\n    if (this.props.editing) {\n      this.setState({ mouseOverX: null, mouseOverY: null })\n      e.target.parentElement.style.border = \"0\"\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.textureSize !== this.props.textureSize) {\n      this.initializeGridWithTextureSize(this.props.textureSize)\n    }\n    if (prevProps.playerMaxHealth !== this.props.playerMaxHealth) {\n      this.setState({ currentPlayerHealth: this.props.playerMaxHealth })\n    }\n  }\n\n  initializeGridWithTextureSize(textureSize, tMap, oMap, useURL) {\n    let gridWidth = Math.floor(this.container.offsetWidth / textureSize)\n    let gridHeight = Math.floor(this.container.offsetHeight / textureSize)\n    let xOffset = (this.container.offsetWidth % textureSize) / 2\n    let yOffset = (this.container.offsetHeight % textureSize) / 2\n    let playerLocation =\n      useURL !== undefined && this.props.firstRenderPlayerLocation !== null\n        ? this.props.firstRenderPlayerLocation\n        : [0, 0]\n    let thiefLocation =\n      useURL !== undefined && this.props.firstRenderThiefLocation !== null\n        ? this.props.firstRenderThiefLocation\n        : [gridWidth - 1, 0]\n    let texturesMap =\n      tMap === undefined\n        ? new Array(gridWidth * gridHeight).fill(TEXTURES.OBSIDIAN)\n        : new Array(gridWidth * gridHeight).fill(TEXTURES.OBSIDIAN).map((value, index) => {\n            return tMap[index] !== undefined ? tMap[index] : value\n          })\n    let overLayMap =\n      oMap === undefined\n        ? new Array(gridWidth * gridHeight).fill(TEXTURES.TRANSPARENT)\n        : new Array(gridWidth * gridHeight).fill(TEXTURES.TRANSPARENT).map((value, index) => {\n            return oMap[index] !== undefined ? oMap[index] : value\n          })\n\n    this.setState({\n      texturesMap: texturesMap,\n      overLayMap: overLayMap,\n      gridWidth,\n      gridHeight,\n      xOffset,\n      yOffset,\n      initialPlayerLocation: playerLocation,\n      initialThiefLocation: thiefLocation,\n      currentPlayerLocation: playerLocation,\n      currentThiefLocation: thiefLocation,\n      currentPlayerHealth: this.props.playerMaxHealth,\n      currentThiefHealth: this.props.thiefMaxHealth,\n      edits: []\n    })\n    this.props.envIsReady()\n  }\n\n  getNextCharacterAction(type) {\n    let action = getNextAction(this.state, this.props, type)\n    if (action[0] !== 0 || action[1] !== 0) {\n      if (type === CONSTANTS.PLAYER) {\n        let newPosition = [\n          this.state.currentPlayerLocation[0] + action[0],\n          this.state.currentPlayerLocation[1] + action[1]\n        ]\n        this.setState({ currentPlayerLocation: newPosition })\n      } else {\n        let newPosition = [\n          this.state.currentThiefLocation[0] + action[0],\n          this.state.currentThiefLocation[1] + action[1]\n        ]\n        this.setState({ currentThiefLocation: newPosition })\n      }\n    }\n\n    return action\n  }\n  undoEdit() {\n    if (this.state.edits.length > 0) {\n      let editsCopy = this.state.edits.slice()\n      let editToUndo = editsCopy.pop()\n      let index = editToUndo.y * this.state.gridWidth + editToUndo.x\n      if (editToUndo.type === CONSTANTS.TEXTURE) {\n        let texturesMapCopy = this.state.texturesMap.slice()\n        texturesMapCopy[index] = editToUndo.texture\n        this.setState({ texturesMap: texturesMapCopy, edits: editsCopy })\n      } else if (editToUndo.type === CONSTANTS.OVERLAY) {\n        let overLayMapCopy = this.state.overLayMap.slice()\n        overLayMapCopy[index] = editToUndo.texture\n        this.setState({ overLayMap: overLayMapCopy, edits: editsCopy })\n      }\n    }\n  }\n  componentDidMount() {\n    let validTextureSize =\n      this.props.textureSize >= calculateMinTextureSize(window) &&\n      this.props.textureSize <= calculateMaxTextureSize(window)\n    if (validTextureSize) {\n      if (this.props.initialTexturesMap.length > 0 && this.props.initialOverLayMap.length > 0) {\n        this.initializeGridWithTextureSize(\n          this.props.textureSize,\n          this.props.initialTexturesMap,\n          this.props.initialOverLayMap,\n          true\n        )\n      } else {\n        this.initializeGridWithTextureSize(this.props.textureSize)\n      }\n    } else {\n      this.setState({\n        showModal: true,\n        modalMessage:\n          \"We could not load the map from the link, the map was created on a screen bigger than the one you are using currently. Try again using a bigger screen.\"\n      })\n      this.initializeGridWithTextureSize(calculateBestTextureSize(window))\n    }\n    this.props.onRef(this)\n    window.addEventListener(\"resize\", e =>\n      this.initializeGridWithTextureSize(this.props.textureSize)\n    )\n  }\n  onCharacterFinishMove(characterType, action) {\n    const { overLayMap, currentPlayerLocation, currentThiefLocation, texturesMap } = this.state\n    let capitalized = characterType.charAt(0).toUpperCase() + characterType.slice(1)\n    let characterLocation = this.state[\"current\" + capitalized + \"Location\"]\n    let currentCharacterHealth = this.state[\"current\" + capitalized + \"Health\"]\n    let index = characterLocation[1] * this.state.gridWidth + characterLocation[0]\n    if (texturesMap[index] === TEXTURES.LAVA) {\n      this.setCharacterCurrentHealth(characterType, currentCharacterHealth - 1)\n    }\n    if (overLayMap[index] === TEXTURES.HEALTH_PACK) {\n      let newOverLayMap = overLayMap.slice()\n      newOverLayMap[index] = TEXTURES.TRANSPARENT\n      this.setState({\n        overLayMap: newOverLayMap\n      })\n      this.setCharacterCurrentHealth(characterType, this.props.playerMaxHealth)\n    }\n    if (this.state.finishAfterNextAnimation) {\n      this.props.onFinishGame()\n      this.props.onClickRestart()\n    }\n    if (\n      currentPlayerLocation[0] === currentThiefLocation[0] &&\n      currentPlayerLocation[1] === currentThiefLocation[1] &&\n      characterType === CONSTANTS.PLAYER &&\n      !this.props.followCursor\n    ) {\n      this.setState({ finishAfterNextAnimation: true })\n    }\n  }\n  onSelectCustomLevel(levelData) {\n    this.initializeGridWithTextureSize(\n      levelData.textureSize,\n      levelData.initialTexturesMap,\n      levelData.initialOverLayMap,\n      true\n    )\n  }\n  onClickTexture(texture) {\n    this.props.setEditing(true)\n    this.props.setSelectedEditTexture(texture)\n  }\n  onClickRestart() {\n    this.player.onClickRestart()\n    this.thief.onClickRestart()\n    this.setState({\n      currentPlayerLocation: this.state.initialPlayerLocation,\n      currentThiefLocation: this.state.initialThiefLocation,\n      currentPlayerHealth: this.props.playerMaxHealth,\n      currentThiefHealth: this.props.thiefMaxHealth,\n      finishAfterNextAnimation: false\n    })\n  }\n  render() {\n    const {\n      gridWidth,\n      xOffset,\n      yOffset,\n      texturesMap,\n      overLayMap,\n      mouseOverX,\n      mouseOverY,\n      initialPlayerLocation,\n      initialThiefLocation,\n      showModal,\n      modalMessage,\n      currentPlayerHealth,\n      editorExpanded\n    } = this.state\n    const {\n      textureSize,\n      inProgress,\n      paused,\n      followCursor,\n      editing,\n      selectedEditTexture,\n      playerSpeed,\n      setEditing,\n      playerMaxHealth,\n      thiefSpeed\n    } = this.props\n    let isEditingOverLay = selectedEditTexture === TEXTURES.HEALTH_PACK\n    return (\n      <Container onMouseLeave={this.onMouseUp} ref={el => (this.container = el)}>\n        <Modal\n          closable={false}\n          footer={[\n            <Button type=\"primary\" onClick={() => this.setState({ showModal: false })}>\n              Ok\n            </Button>\n          ]}\n          title={\"Sorry\"}\n          visible={showModal}\n        >\n          {modalMessage}\n        </Modal>\n        <EditorContainer expanded={editorExpanded}>\n          <EditorArrow\n            expanded={editorExpanded ? \"true\" : \"false\"}\n            onClick={() => this.setState({ editorExpanded: !editorExpanded })}\n            size=\"small\"\n            shape=\"circle\"\n            ghost=\"true\"\n            icon=\"arrow-right\"\n          ></EditorArrow>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.OBSIDIAN)}\n            src={TEXTURE_DATA[TEXTURES.OBSIDIAN].src}\n          ></Image>\n          <TextureLabel>Obsidian</TextureLabel>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.LAVA)}\n            src={TEXTURE_DATA[TEXTURES.LAVA].src}\n          ></Image>\n          <TextureLabel>Lava</TextureLabel>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.WALL)}\n            src={TEXTURE_DATA[TEXTURES.WALL].src}\n          ></Image>\n          <TextureLabel>Wall</TextureLabel>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.HEALTH_PACK)}\n            src={TEXTURE_DATA[TEXTURES.WALL].src}\n          ></Image>\n          <TextureLabel>Health</TextureLabel>\n          <EditorDoneButton\n            onClick={() => {\n              setEditing(false)\n              this.setState({ editorExpanded: false })\n            }}\n            size=\"small\"\n          >\n            Done\n          </EditorDoneButton>\n        </EditorContainer>\n        {texturesMap.map((texture, index) => {\n          const x = index % gridWidth\n          const y = Math.floor(index / gridWidth)\n          let isBeingEdited = editing && mouseOverX === x && mouseOverY === y\n          return (\n            <Texture\n              x={x}\n              y={y}\n              key={index}\n              textureSize={textureSize}\n              xOffset={xOffset}\n              zIndex={1}\n              yOffset={yOffset}\n              texture={isBeingEdited && !isEditingOverLay ? selectedEditTexture : texture}\n            ></Texture>\n          )\n        })}\n        {overLayMap.map((overLayTexture, index) => {\n          const x = index % gridWidth\n          const y = Math.floor(index / gridWidth)\n          let isBeingEdited = editing && mouseOverX === x && mouseOverY === y\n          return (\n            <Texture\n              x={x}\n              y={y}\n              key={index}\n              onMouseHoverTextureEnter={e => this.onMouseHoverTextureEnter(e, x, y)}\n              onMouseHoverTextureLeave={e => this.onMouseHoverTextureLeave(e)}\n              textureSize={textureSize}\n              onMouseDown={e => this.onMouseDown(e, x, y)}\n              zIndex={2}\n              onMouseUp={this.onMouseUp}\n              xOffset={xOffset}\n              yOffset={yOffset}\n              texture={isBeingEdited && isEditingOverLay ? selectedEditTexture : overLayTexture}\n            ></Texture>\n          )\n        })}\n        <Character\n          xOffset={xOffset}\n          yOffset={yOffset}\n          onRef={ref => (this.player = ref)}\n          onPlaceCharacter={this.onPlaceCharacter}\n          initialCharacterLocation={initialPlayerLocation}\n          textureSize={textureSize}\n          movementSpeed={playerSpeed}\n          inProgress={inProgress}\n          paused={paused}\n          getNextAction={this.getNextCharacterAction}\n          onCharacterFinishMove={this.onCharacterFinishMove}\n          currentHealth={currentPlayerHealth}\n          maxHealth={playerMaxHealth}\n          renderOnScreen={true}\n          healthBar={true}\n          type={CONSTANTS.PLAYER}\n        ></Character>\n        <Character\n          xOffset={xOffset}\n          yOffset={yOffset}\n          onRef={ref => (this.thief = ref)}\n          onPlaceCharacter={this.onPlaceCharacter}\n          initialCharacterLocation={initialThiefLocation}\n          textureSize={textureSize}\n          movementSpeed={thiefSpeed}\n          onCharacterFinishMove={this.onCharacterFinishMove}\n          inProgress={inProgress}\n          paused={paused}\n          getNextAction={this.getNextCharacterAction}\n          renderOnScreen={!followCursor}\n          type={CONSTANTS.THIEF}\n        ></Character>\n      </Container>\n    )\n  }\n}\n\nexport default Grid\n","export const BREAKPOINTS = {\n  MEDIUM_WIDTH: \"1100px\",\n  SMALL_WIDTH: \"900px\",\n  VERY_SMALL_WIDTH: \"720px\",\n  MEDIUM_HEIGHT: \"960px\",\n  SMALL_HEIGHT: \"820px\",\n  VERY_SMALL_HEIGHT: \"700px\"\n}\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport { Slider, Button, Typography, Radio, Tooltip, Modal, Input } from \"antd\"\nimport { CONSTANTS } from \"../Constants/Constants\"\nimport { CONFIG } from \"../Constants/Config\"\nimport { TEXTURES } from \"../Constants/Textures\"\nimport { BREAKPOINTS } from \"../Constants/BreakPoints\"\n\nimport { calculateMaxTextureSize, calculateMinTextureSize } from \"../HelperFunctions\"\nconst Container = styled.div`\n  width: 100%;\n  height: fit-content;\n  background-color: ${CONFIG.MAIN_APP_COLOR};\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  padding-top: 15px;\n  @media (max-height: ${BREAKPOINTS.SMALL_HEIGHT}) {\n    font-size: 11px;\n  }\n  @media (max-width: ${BREAKPOINTS.SMALL_WIDTH}) {\n    font-size: 11px;\n  }\n`\nconst FlexDivCenter = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n  @media (max-height: ${BREAKPOINTS.MEDIUM_HEIGHT}) {\n    margin-bottom: 6px;\n  }\n  @media (max-height: ${BREAKPOINTS.SMALL_HEIGHT}) {\n    margin-bottom: 4px;\n  }\n  @media (max-height: ${BREAKPOINTS.VERY_SMALL_HEIGHT}) {\n    margin-bottom: 2px;\n  }\n`\nconst StyledText = styled(Typography.Text)`\n  color: white !important;\n`\nconst StyledGitButton = styled(Button)`\n  display: block;\n`\nconst StyledButton = styled(Button)`\n  @media (max-height: ${BREAKPOINTS.MEDIUM_HEIGHT}) {\n    height: 35px !important;\n  }\n  @media (max-height: ${BREAKPOINTS.SMALL_HEIGHT}) {\n    height: 30px !important;\n  }\n  @media (max-height: ${BREAKPOINTS.VERY_SMALL_HEIGHT}) {\n    height: 25px !important;\n  }\n  border-radius: 20px !important;\n  height: 43px !important;\n`\nconst Left = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  flex-direction: column;\n  flex-grow: 1;\n  height: 100%;\n  align-self: flex-start;\n  padding-top: 30px;\n`\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  flex-direction: column;\n  align-self: center;\n  flex-grow: 0.3;\n`\nconst Right = styled.div`\n  display: flex;\n  height: 100%;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin: auto;\n  flex-direction: column;\n  flex-grow: 1;\n  align-self: flex-end;\n  padding-top: 30px;\n`\nconst Label = styled(Typography.Text)`\n  margin-left: 6px;\n  margin-right: 6px;\n  display: inline-block;\n  width: 20%;\n  color: white !important;\n`\nconst StyledSlider = styled(Slider)`\n  width: 70%;\n  display: inline-block;\n  min-width: 50px;\n  margin: 0 !important;\n`\nconst SliderContainer = styled.div`\n  width: 100%;\n  margin-bottom: 60px;\n  @media (max-width: ${BREAKPOINTS.VERY_SMALL_WIDTH}) {\n    margin-bottom: 0;\n  }\n  display: flex;\n  align-items: center;\n`\nconst StyledTitle = styled(Typography.Title)`\n  color: white !important;\n`\nconst LeftRightContainer = styled.div`\n  width: 60%;\n  @media (max-width: ${BREAKPOINTS.MEDIUM_WIDTH}) {\n    width: 100%;\n  }\n  display: flex;\n  flex-direction: column;\n`\nconst PlayButton = styled(Button)`\n  margin: ${props => props.margin};\n  font-size: ${props => props.fontSize + \"px !important\"};\n  @media (max-height: ${BREAKPOINTS.MEDIUM_HEIGHT}) {\n    font-size: 25px !important;\n  }\n  height: fit-content !important;\n  width: fit-content !important;\n  &:focus,\n  &:active {\n    color: white !important;\n  }\n  &:hover {\n    color: #40a9ff !important;\n  }\n`\nconst playerMaxHealth = (props, smallScreen) => {\n  const component = [\n    <Label key=\"playerMaxHealthLabel\">{smallScreen ? \"Player Max Health\" : \"Max Health\"}</Label>,\n    <StyledSlider\n      key=\"playerMaxHealthSlider\"\n      onChange={value => props.setCharacterMaxHealth(CONSTANTS.PLAYER, value)}\n      value={props.playerMaxHealth}\n      disabled={props.inProgress}\n      min={1}\n      max={10}\n      step={1}\n      tooltipPlacement={\"top\"}\n    />\n  ]\n  return smallScreen ? (\n    component\n  ) : (\n    <Tooltip placement=\"topLeft\" title=\"Changes The Player Max Health \">\n      <SliderContainer>{component.map(item => item)}</SliderContainer>\n    </Tooltip>\n  )\n}\nconst playerSpeed = (props, smallScreen) => {\n  const component = [\n    <Label key=\"playerSpeedLabel\">{smallScreen ? \"Player Speed\" : \"Speed\"}</Label>,\n    <StyledSlider\n      key=\"playerSpeedSlider\"\n      onChange={speed => props.setCharacterSpeed(CONSTANTS.PLAYER, speed)}\n      value={props.playerSpeed}\n      min={1}\n      max={4}\n      step={1}\n      tooltipPlacement={\"top\"}\n    />\n  ]\n\n  return smallScreen ? (\n    component\n  ) : (\n    <Tooltip placement=\"topLeft\" title=\"Changes The Player Movement Speed\">\n      <SliderContainer>{component.map(item => item)}</SliderContainer>\n    </Tooltip>\n  )\n}\nconst thiefSpeed = (props, smallScreen) => {\n  const component = [\n    <Label key=\"thiefSpeedLabel\">{smallScreen ? \"Thief Speed\" : \"Speed\"}</Label>,\n    <StyledSlider\n      key=\"thiefSpeedSlider\"\n      onChange={speed => props.setCharacterSpeed(CONSTANTS.THIEF, speed)}\n      value={props.thiefSpeed}\n      min={1}\n      max={4}\n      step={1}\n      tooltipPlacement={\"top\"}\n    />\n  ]\n\n  return smallScreen ? (\n    component\n  ) : (\n    <Tooltip placement=\"topLeft\" title=\"Changes The Thief Movement Speed\">\n      <SliderContainer>{component.map(item => item)}</SliderContainer>\n    </Tooltip>\n  )\n}\nconst getPlayButton = props => {\n  return props.inProgress ? (\n    <div>\n      <PlayButton\n        disabled={!props.ready}\n        type={\"link\"}\n        fontSize={30}\n        onClick={() => (props.paused ? props.onClickResume() : props.onClickPause())}\n        ghost={true}\n        margin={\"0 4px 0 15px\"}\n        icon={props.paused ? \"play-circle\" : \"pause-circle\"}\n      ></PlayButton>\n      <PlayButton\n        disabled={!props.ready}\n        type={\"link\"}\n        fontSize={30}\n        onClick={() => props.onClickRestart()}\n        margin={\"0 15px 0 4px\"}\n        ghost={true}\n        icon={\"stop\"}\n      ></PlayButton>\n    </div>\n  ) : (\n    <PlayButton\n      disabled={!props.ready}\n      type={\"link\"}\n      ghost={true}\n      fontSize={35}\n      margin={\"0 15px 0 15px\"}\n      onClick={() => props.onClickStart()}\n      icon={\"play-circle\"}\n    ></PlayButton>\n  )\n}\nexport default class Footer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      minTextureSize: calculateMinTextureSize(window),\n      maxTextureSize: calculateMaxTextureSize(window)\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", e => {\n      this.setState({\n        minTextureSize: calculateMinTextureSize(window),\n        maxTextureSize: calculateMaxTextureSize(window)\n      })\n    })\n  }\n  copyLinkToClipBoard() {\n    let el = document.getElementById(\"shareLinkInput\")\n    el.select()\n    el.setSelectionRange(0, 99999)\n    document.execCommand(\"copy\")\n  }\n  render() {\n    const smallScreenWidth = window.innerWidth <= parseInt(BREAKPOINTS.VERY_SMALL_WIDTH, 10)\n    const smallScreenHeight = window.innerHeight <= parseInt(BREAKPOINTS.SMALL_HEIGHT, 10)\n    const props = this.props\n    const { minTextureSize, maxTextureSize, showModal } = this.state\n    return (\n      <Container>\n        <Modal\n          closable={false}\n          footer={[\n            <Button key={1} type=\"primary\" onClick={() => this.setState({ showModal: false })}>\n              Ok\n            </Button>\n          ]}\n          visible={showModal}\n          title={\"Share Your Map!\"}\n        >\n          <Typography.Text>Copy This Link and Send it To your Friends</Typography.Text>\n          <div>\n            <Input\n              id={\"shareLinkInput\"}\n              style={{ margin: \"20px 20px 20px 0\", width: \"80%\" }}\n              defaultValue={window.location.href}\n            ></Input>\n            <Button onClick={() => this.copyLinkToClipBoard()} type=\"secondary\">\n              Copy\n            </Button>\n          </div>\n          <Typography.Text type={\"secondary\"}>\n            Note that your friend's screen needs to be at least as big as your screen to maintain\n            the shape of the map!\n          </Typography.Text>\n        </Modal>\n        {smallScreenWidth ? null : (\n          <Left>\n            <LeftRightContainer>\n              <FlexDivCenter>\n                <StyledTitle level={4}>Player Options</StyledTitle>\n              </FlexDivCenter>\n              {playerMaxHealth(props, false)}\n              {playerSpeed(props, false)}\n            </LeftRightContainer>\n          </Left>\n        )}\n\n        <Center>\n          <FlexDivCenter>\n            <Tooltip placement=\"top\" title=\"The Player Will Follow The Mouse Cursor on The Screen\">\n              <StyledButton onClick={() => props.enableFollowCursor()} style={{ margin: \"0\" }}>\n                Follow Cursor\n              </StyledButton>\n            </Tooltip>\n          </FlexDivCenter>\n          <FlexDivCenter>\n            <Tooltip placement=\"left\" title=\"Undo The Last Edit to The Map\">\n              <StyledButton onClick={() => props.onClickUndo()} style={{ margin: \"0 15px 0 0\" }}>\n                Undo Edit\n              </StyledButton>\n            </Tooltip>\n            {getPlayButton(props)}\n            <Tooltip placement=\"right\" title=\"Share This Map With a Friend\">\n              <StyledButton\n                onClick={() => {\n                  props.generateLink()\n                  this.setState({ showModal: true })\n                }}\n                style={{ margin: \"0 0 0 15px\" }}\n              >\n                Share Map\n              </StyledButton>\n            </Tooltip>\n          </FlexDivCenter>\n          <FlexDivCenter>\n            <Tooltip placement=\"left\" title=\"Position The Start Location of The Player\">\n              <StyledButton\n                onClick={() => props.setSelectedEditTexture(TEXTURES.PLAYER_IDLE)}\n                style={{ margin: \"0 10px 0 0\" }}\n              >\n                Place Player\n              </StyledButton>\n            </Tooltip>\n            <Tooltip placement=\"right\" title=\"Position The Start Location of The Thief\">\n              <StyledButton\n                onClick={() => props.setSelectedEditTexture(TEXTURES.THIEF_IDLE)}\n                style={{ margin: \"0 0 0 10px\" }}\n              >\n                Place Thief\n              </StyledButton>\n            </Tooltip>\n          </FlexDivCenter>\n          <Tooltip placement=\"right\" title=\"Changes The Grid Size\">\n            <FlexDivCenter>\n              <Label>Map Scale</Label>\n              <StyledSlider\n                min={minTextureSize}\n                max={maxTextureSize}\n                onChange={props.setTextureSize}\n                disabled={props.inProgress}\n                value={props.textureSize}\n                tooltipPlacement={\"top\"}\n              />\n            </FlexDivCenter>\n          </Tooltip>\n          {smallScreenWidth\n            ? [\n                <Tooltip key={1} placement=\"topLeft\" title=\"Changes The Player Max Health\">\n                  <FlexDivCenter>{playerMaxHealth(props, true)}</FlexDivCenter>\n                </Tooltip>,\n                <Tooltip key={2} placement=\"topLeft\" title=\"Changes The Player Movement Speed\">\n                  <FlexDivCenter>{playerSpeed(props, true)}</FlexDivCenter>\n                </Tooltip>,\n                <Tooltip key={3} placement=\"topLeft\" title=\"Changes The Thief Movement Speed\">\n                  <FlexDivCenter>{thiefSpeed(props, true)}</FlexDivCenter>\n                </Tooltip>\n              ]\n            : null}\n\n          <Tooltip placement=\"right\" title=\"Loads a Pre Made Level Created By The Developer\">\n            <FlexDivCenter>\n              <Label style={{ width: \"30%\" }}>Pre made Levels</Label>\n              <Radio.Group\n                value={props.selectedLevel}\n                size={smallScreenHeight || smallScreenWidth ? \"small\" : \"default\"}\n                onChange={e => props.setSelectedLevel(e.target.value)}\n              >\n                <Radio.Button value={1}>1</Radio.Button>\n                <Radio.Button value={2}>2</Radio.Button>\n                <Radio.Button value={3}>3</Radio.Button>\n                <Radio.Button value={4}>4</Radio.Button>\n                <Radio.Button value={5}>5</Radio.Button>\n                <Radio.Button value={6}>6</Radio.Button>\n              </Radio.Group>\n            </FlexDivCenter>\n          </Tooltip>\n          <Tooltip\n            placement=\"right\"\n            title=\"Changes Wether The Player Maximizes Health or Minimizes Distance\"\n          >\n            <FlexDivCenter>\n              <Label style={{ width: \"30%\" }}>Search Priority</Label>\n              <Radio.Group\n                size={smallScreenHeight || smallScreenWidth ? \"small\" : \"default\"}\n                value={props.searchPriority}\n                onChange={e => props.setSearchPriority(e.target.value)}\n              >\n                <Radio.Button value={CONSTANTS.HEALTH}>HEALTH</Radio.Button>\n                <Radio.Button value={CONSTANTS.SPEED}>SPEED</Radio.Button>\n              </Radio.Group>\n            </FlexDivCenter>\n          </Tooltip>\n          <StyledText>Made By Mark Armanious © 2019</StyledText>\n          <StyledGitButton\n            href={\"https://github.com/markarmanus/path_finder\"}\n            target={\"_blank\"}\n            shape={\"circle\"}\n            ghost={true}\n            icon={\"github\"}\n            type={\"link\"}\n          ></StyledGitButton>\n        </Center>\n        {smallScreenWidth ? null : (\n          <Right>\n            <LeftRightContainer>\n              <FlexDivCenter>\n                <StyledTitle level={4}>Thief Options</StyledTitle>\n              </FlexDivCenter>\n              {thiefSpeed(props, false)}\n            </LeftRightContainer>\n          </Right>\n        )}\n      </Container>\n    )\n  }\n}\n","export const LEVELS = {\n  1: \"allowDiagonalActions=false&firstRenderPlayerLocation=0,0&firstRenderThiefLocation=28,0&initialOverLayMapinitialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,2,2,1,2,1,2,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,2,1,2,2,2,2,1,2,2,2,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,1,2,2,1,1,2,1,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,1,2,1,2,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,2,2,1,2,2,2,2,2,1,2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,2,2,2,2,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&playerMaxHealth=5&playerSpeed=1&searchPriority=health&textureSize=66&thiefSpeed=1\",\n  2: \"allowDiagonalActions=false&firstRenderPlayerLocation=0,0&firstRenderThiefLocation=28,0&initialOverLayMapinitialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,1,2,1,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,2,2,2,1,2,1,2,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,1,2,1,1,2,1,2,2,1,1,2,1,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,1,2,1,2,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,2,1,2,1,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,2,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&playerMaxHealth=5&playerSpeed=1&searchPriority=health&textureSize=66&thiefSpeed=1\",\n  3: \"minWidth=1920&minHeight=600&allowDiagonalActions=true&firstRenderPlayerLocation=3,0&firstRenderThiefLocation=5,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&playerMaxHealth=10&playerSpeed=2&searchPriority=speed&textureSize=197&thiefSpeed=3\",\n  4: \"http://localhost:3000/?allowDiagonalActions=true&firstRenderPlayerLocation=0,0&firstRenderThiefLocation=11,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&minHeight=937&minWidth=1920&playerMaxHealth=10&playerSpeed=3&searchPriority=speed&textureSize=159&thiefSpeed=3\",\n  5: \"allowDiagonalActions=false&firstRenderPlayerLocation=3,2&firstRenderThiefLocation=5,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1&playerMaxHealth=10&playerSpeed=4&searchPriority=health&textureSize=211&thiefSpeed=1\"\n}\n","import React, { Component } from \"react\"\nimport Grid from \"./Grid\"\nimport Footer from \"./Footer\"\nimport { CONFIG } from \"../Constants/Config\"\nimport styled from \"styled-components\"\nimport { TEXTURES } from \"../Constants/Textures\"\nimport queryString from \"query-string\"\nimport { LEVELS } from \"../Constants/Levels\"\nimport { message } from \"antd\"\nimport { calculateBestTextureSize } from \"../HelperFunctions\"\nimport \"antd/dist/antd.css\"\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n`\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    let params = this.parseLevelData(this.props.location.search)\n    this.state = {\n      textureSize: params.textureSize ? params.textureSize : calculateBestTextureSize(window),\n      selectedEditTexture: null,\n      editing: false,\n      selectedLevel: CONFIG.DEFAULT_SELECTED_LEVEL,\n      inProgress: false,\n      paused: false,\n      ready: false,\n      followCursor: false,\n      // allowDiagonalActions: params.allowDiagonalActions ? params.allowDiagonalActions : false,\n      initialTexturesMap: params.initialTexturesMap ? params.initialTexturesMap : [],\n      initialOverLayMap: params.initialOverLayMap ? params.initialOverLayMap : [],\n      playerSpeed: params.playerSpeed ? params.playerSpeed : CONFIG.DEFAULT_PLAYER_SPEED,\n      firstRenderPlayerLocation: params.firstRenderPlayerLocation\n        ? params.firstRenderPlayerLocation\n        : null,\n      firstRenderThiefLocation: params.firstRenderThiefLocation\n        ? params.firstRenderThiefLocation\n        : null,\n      playerMaxHealth: params.playerMaxHealth\n        ? params.playerMaxHealth\n        : CONFIG.DEFAULT_PLAYER_HEALTH,\n      searchPriority: params.searchPriority\n        ? params.searchPriority\n        : CONFIG.DEFAULT_SEARCH_PRIORITY,\n      thiefSpeed: params.thiefSpeed ? params.thiefSpeed : CONFIG.DEFAULT_THIEF_SPEED\n    }\n    this.onClickUndo = this.onClickUndo.bind(this)\n    this.setTextureSize = this.setTextureSize.bind(this)\n    this.setSelectedEditTexture = this.setSelectedEditTexture.bind(this)\n    this.setEditing = this.setEditing.bind(this)\n    this.onClickStart = this.onClickStart.bind(this)\n    this.onClickRestart = this.onClickRestart.bind(this)\n    this.onClickPause = this.onClickPause.bind(this)\n    this.onClickResume = this.onClickResume.bind(this)\n    this.setCharacterSpeed = this.setCharacterSpeed.bind(this)\n    this.envIsReady = this.envIsReady.bind(this)\n    this.enableFollowCursor = this.enableFollowCursor.bind(this)\n    this.setCharacterMaxHealth = this.setCharacterMaxHealth.bind(this)\n    this.setSearchPriority = this.setSearchPriority.bind(this)\n    this.onFinishGame = this.onFinishGame.bind(this)\n    this.generateLink = this.generateLink.bind(this)\n    this.setAllowDiagonalActions = this.setAllowDiagonalActions.bind(this)\n    this.setSelectedLevel = this.setSelectedLevel.bind(this)\n    this.parseLevelData = this.parseLevelData.bind(this)\n  }\n  parseLevelData(value) {\n    return queryString.parse(value, {\n      arrayFormat: \"comma\",\n      parseNumbers: true,\n      parseBooleans: true\n    })\n  }\n  setSelectedLevel(level) {\n    let levelData = this.parseLevelData(LEVELS[level])\n\n    if (levelData.minHeight <= window.innerHeight && levelData.minWidth <= window.innerWidth) {\n      this.setState({ selectedLevel: level, ...levelData }, () => {\n        this.grid.onSelectCustomLevel(levelData)\n      })\n    } else {\n      message.error(\"Your Screen is Too Small For This Map!\")\n    }\n  }\n  setAllowDiagonalActions(value) {\n    this.setState({ allowDiagonalActions: value })\n  }\n  onFinishGame() {\n    this.setState({ inProgress: false })\n  }\n  generateLink() {\n    this.grid.updateURL()\n  }\n  setCharacterMaxHealth(type, value) {\n    this.setState({ [type + \"MaxHealth\"]: value })\n  }\n  enableFollowCursor() {\n    if (this.state.ready) {\n      this.setState({ followCursor: true, inProgress: true })\n    }\n  }\n  setCharacterSpeed(type, speed) {\n    this.setState({ [type + \"Speed\"]: speed })\n  }\n  onClickUndo() {\n    this.grid.undoEdit()\n  }\n  setTextureSize(size) {\n    this.setState({ textureSize: size })\n    this.onClickRestart()\n  }\n  envIsReady() {\n    this.setState({ ready: true })\n  }\n  setEditing(value) {\n    this.setState({ editing: value })\n  }\n  setSelectedEditTexture(texture) {\n    let isEditing =\n      texture !== null && texture !== TEXTURES.PLAYER_IDLE && texture !== TEXTURES.THIEF_IDLE\n    this.setState({\n      selectedEditTexture: texture,\n      editing: isEditing\n    })\n  }\n  onClickStart() {\n    this.setState({ inProgress: true })\n  }\n  onClickRestart() {\n    this.setState({\n      paused: false,\n      inProgress: false,\n      selectedEditTexture: null,\n      editing: false,\n      followCursor: false\n    })\n    this.grid.onClickRestart()\n  }\n  onClickPause() {\n    this.setState({ paused: true })\n  }\n  onClickResume() {\n    this.setState({ paused: false })\n  }\n  setSearchPriority(value) {\n    this.setState({ searchPriority: value })\n  }\n  render() {\n    return (\n      <MainContainer>\n        <Grid onRef={ref => (this.grid = ref)} {...this.state} {...this}></Grid>\n        <Footer {...this} {...this.state}></Footer>\n      </MainContainer>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport AppRoute from \"./Components/AppRoute\"\n\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<AppRoute />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from \"react\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport App from \"./App\"\nexport default function AppRoute() {\n  return (\n    <Router>\n      <Route path={\"/\"} component={App}></Route>\n    </Router>\n  )\n}\n"],"sourceRoot":""}