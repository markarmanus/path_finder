{"version":3,"sources":["Constants/Textures.js","Components/Texture.js","Constants/Constants.js","Constants/Config.js","Components/Character.js","AStar.js","HelperFunctions.js","Components/Grid.js","Constants/BreakPoints.js","Components/Footer.js","Constants/Levels.js","Components/App.js","serviceWorker.js","index.js","Components/AppRoute.js"],"names":["TEXTURES","OBSIDIAN","LAVA","PLAYER_RUNNING","PLAYER_IDLE","PLAYER_UP","PLAYER_DOWN","THIEF_IDLE","THIEF_UP","THIEF_DOWN","THIEF_RUNNING","WALL","HEALTH_PACK","TRANSPARENT","TEXTURE_DATA","1","animationSpeed","animated","spriteWidth","spriteHeight","numberOfSprites","src","2","3","4","5","6","7","8","9","10","11","12","13","Sprite","styled","div","props","textureData","translationTo","keyframes","getAnimation","ProgressBarUnder","textureSize","ProgressBarOver","healthBarPercentage","Texture","state","nextProps","texture","this","x","y","xOffset","yOffset","onMouseDown","onMouseUp","onMouseHoverTextureEnter","onMouseHoverTextureLeave","zIndex","type","style","position","height","width","top","left","overflow","userSelect","undefined","onMouseEnter","onMouseLeave","onTouchMove","onTouchEnd","onTouchStart","Component","CONSTANTS","CONFIG","DEFAULT_PLAYER_SPEED","DEFAULT_THIEF_SPEED","DEFAULT_PLAYER_HEALTH","DEFAULT_THIEF_HEALTH","MAIN_APP_COLOR","DEFAULT_SELECTED_LEVEL","DEFAULT_SEARCH_PRIORITY","EDITING_BORDER","CharacterSprite","Character","walking","currentTexture","toUpperCase","currentMovementSpeed","movementSpeed","takeAction","bind","setCorrectTexture","setCorrectDirection","doNextAction","action","getNextAction","typeUpperCase","setState","onRef","character","document","getElementById","inProgress","paused","renderOnScreen","direction","entity","transform","firstChild","stepsCount","Math","floor","remainder","counter","id","setInterval","offsetLeft","offsetTop","clearInterval","onCharacterFinishMove","initialCharacterLocation","onPlaceCharacter","healthBar","currentHealth","maxHealth","costToLocation","from","to","dx","dy","sqrt","isLegalAction","destinationPos","actionType","abs","getActionType","isOutOfBoundaries","gridWidth","gridHeight","isDestinationWall","texturesMap","isHorizontalWall","isVerticalWall","getPath","node","parent","Node","health","g","h","characterType","actions","allowDiagonalActions","concat","thiefSpeed","bestAction","thiefLocation","currentThiefLocation","plyerLocation","currentPlayerLocation","leastDistance","i","length","newThiefLocation","distance","getNextThiefAction","start","goal","foundPath","bestPathNode","bestPathFoundHealth","actionsCost","closed","Array","map","playerMaxHealth","fill","open","push","currentPlayerHealth","pop","searchPriority","forEach","index","newLocation","healthPackOnLocation","overLayMap","isLava","nodeToAdd","added","nodeToAddF","splice","addToOpen","calculateBestTextureSize","window","screen","calculateMaxTextureSize","min","calculateMinTextureSize","max","Container","EditorDoneButton","Button","EditorContainer","expanded","EditorArrow","TextureLabel","Typography","Text","Image","img","Grid","edits","modalMessage","showModal","editorExpanded","finishAfterNextAnimation","initialPlayerLocation","initialThiefLocation","currentThiefHealth","thiefMaxHealth","mouseOverX","mouseOverY","mouseDown","handleHoverWhilePlacingCharacter","getNextCharacterAction","setCharacterCurrentHealth","updateURL","value","capitalized","charAt","slice","e","persist","setSelectedEditTexture","resetCharactersLocation","player","thief","newURLObject","playerSpeed","initialTexturesMap","initialOverLayMap","minHeight","minWidth","firstRenderPlayerLocation","firstRenderThiefLocation","history","replaceState","queryString","stringify","arrayFormat","selectedEditTexture","editing","followCursor","touchX","touches","pageX","touchY","pageY","target","parentElement","border","newOverLayMap","newTexturesMap","handleFollowCursor","prevProps","initializeGridWithTextureSize","tMap","oMap","useURL","container","offsetWidth","offsetHeight","playerLocation","envIsReady","newPosition","editsCopy","editToUndo","texturesMapCopy","overLayMapCopy","validTextureSize","mapCanFit","URLParams","addEventListener","characterLocation","currentCharacterHealth","onFinishGame","onClickRestart","levelData","setEditing","isEditingOverLay","ref","el","closable","footer","onClick","title","visible","size","shape","ghost","icon","onClickTexture","isBeingEdited","key","overLayTexture","BREAKPOINTS","FlexDivCenter","StyledText","StyledGitButton","StyledButton","Left","Center","Right","Label","StyledSlider","Slider","SliderContainer","StyledTitle","Title","LeftRightContainer","PlayButton","margin","fontSize","smallScreen","component","onChange","setCharacterMaxHealth","disabled","step","tooltipPlacement","placement","item","speed","setCharacterSpeed","Footer","minTextureSize","maxTextureSize","select","setSelectionRange","execCommand","console","log","smallScreenWidth","parseInt","smallScreenHeight","defaultValue","location","href","copyLinkToClipBoard","level","enableFollowCursor","onClickUndo","ready","onClickResume","onClickPause","onClickStart","getPlayButton","generateLink","setTextureSize","Group","selectedLevel","setSelectedLevel","setSearchPriority","LEVELS","MainContainer","App","params","parseLevelData","search","setAllowDiagonalActions","parse","parseNumbers","parseBooleans","grid","onSelectCustomLevel","message","error","undoEdit","isEditing","Boolean","hostname","match","ReactDOM","render","path","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e722eef.chunk.js","sourcesContent":["export const TEXTURES = {\n  OBSIDIAN: 1,\n  LAVA: 2,\n  PLAYER_RUNNING: 3,\n  PLAYER_IDLE: 4,\n  PLAYER_UP: 5,\n  PLAYER_DOWN: 6,\n  THIEF_IDLE: 7,\n  THIEF_UP: 8,\n  THIEF_DOWN: 9,\n  THIEF_RUNNING: 10,\n  WALL: 11,\n  HEALTH_PACK: 12,\n  TRANSPARENT: 13\n}\nexport const TEXTURE_DATA = {\n  1: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"100px\",\n    spriteHeight: \"100px\",\n    numberOfSprites: 1,\n    src: \"obsidian.png\"\n  },\n  2: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"100px\",\n    spriteHeight: \"100px\",\n    numberOfSprites: 1,\n    src: \"lava.jpg\"\n  },\n  3: {\n    animationSpeed: \"0.3s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Right.png\"\n  },\n  4: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 1,\n    src: \"Character_Idle.png\"\n  },\n  5: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Up.png\"\n  },\n  6: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Down.png\"\n  },\n  7: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 1,\n    src: \"Character_Idle.png\"\n  },\n  8: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Up.png\"\n  },\n  9: {\n    animationSpeed: \"0.5s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Down.png\"\n  },\n  10: {\n    animationSpeed: \"0.3s\",\n    animated: true,\n    spriteWidth: \"32px\",\n    spriteHeight: \"32px\",\n    numberOfSprites: 4,\n    src: \"Character_Right.png\"\n  },\n  11: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"10px\",\n    spriteHeight: \"10px\",\n    numberOfSprites: 1,\n    src: \"wall.png\"\n  },\n  12: {\n    animationSpeed: \"0.3s\",\n    animated: true,\n    spriteWidth: \"10px\",\n    spriteHeight: \"10px\",\n    numberOfSprites: 4,\n    src: \"Character_Right.png\"\n  },\n  13: {\n    animationSpeed: null,\n    animated: false,\n    spriteWidth: \"10px\",\n    spriteHeight: \"10px\",\n    numberOfSprites: 1,\n    src: \"Transparent.png\"\n  }\n}\n","import React, { Component } from \"react\"\nimport { TEXTURE_DATA } from \"../Constants/Textures\"\nimport styled, { keyframes } from \"styled-components\"\nimport { Progress } from \"antd\"\n\nconst getAnimation = numberOfSprites => {\n  const translationTo = ((numberOfSprites - 1) / numberOfSprites) * 100\n  const transform = keyframes`\n  from { \n    transform: translateX(0); \n  }\n  to { \n    transform: translateX(-${translationTo}%); \n  }\n}\n`\n  return transform\n}\nconst Sprite = styled.div`\n  width: ${props => props.textureData.numberOfSprites * 100}%;\n  height: 100%;\n  background-image: url(${props => props.textureData.src});\n  background-size: 100%, 100%;\n  background-repeat: ${props => (props.textureData.animated ? \"no-repeat\" : \"unset\")};\n  animation: ${props => getAnimation(props.textureData.numberOfSprites)}\n    ${props => props.textureData.animationSpeed}\n    steps(${props => props.textureData.numberOfSprites - 1})\n    ${props => (props.textureData.animated ? \"infinite\" : 0)};\n  position: absolute;\n  user-select: none;\n\n  left: 0;\n  top: 0;\n`\nconst ProgressBarUnder = styled.div`\n  width: 80%;\n  position: relative;\n  background-color: #661918;\n  margin: auto;\n  border-radius: 10px;\n  height: ${props => props.textureSize * 0.1}px;\n  overflow: hidden;\n`\nconst ProgressBarOver = styled.div`\n  width: 100%;\n  position: relative;\n  background-color: #e03836;\n  margin: auto;\n  border-radius: 10px;\n  transition: right 0.5s;\n  right: ${props => 100 - props.healthBarPercentage}%;\n  height: ${props => props.textureSize * 0.1}px;\n`\nexport class Texture extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  shouldComponentUpdate(nextProps) {\n    return (\n      nextProps.texture !== this.props.texture ||\n      nextProps.textureSize !== this.props.textureSize ||\n      nextProps.x !== this.props.x ||\n      nextProps.y !== this.props.y ||\n      nextProps.xOffset !== this.props.xOffset ||\n      nextProps.yOffset !== this.props.yOffset ||\n      nextProps.healthBarPercentage !== this.props.healthBarPercentage\n    )\n  }\n\n  render() {\n    const {\n      yOffset,\n      xOffset,\n      y,\n      x,\n      onMouseDown,\n      onMouseUp,\n      onMouseHoverTextureEnter,\n      onMouseHoverTextureLeave,\n      texture,\n      zIndex,\n      textureSize,\n      healthBarPercentage,\n      type\n    } = this.props\n    const textureData = TEXTURE_DATA[texture]\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          height: textureSize + \"px\",\n          width: textureSize + \"px\",\n          top: yOffset ? y * textureSize + yOffset : y * textureSize,\n          left: xOffset ? x * textureSize + xOffset : x * textureSize,\n          zIndex: zIndex,\n          overflow: \"hidden\",\n          userSelect: \"none\"\n        }}\n      >\n        {healthBarPercentage !== undefined ? (\n          <ProgressBarUnder textureSize={textureSize}>\n            <ProgressBarOver\n              healthBarPercentage={healthBarPercentage}\n              textureSize={textureSize}\n            ></ProgressBarOver>\n          </ProgressBarUnder>\n        ) : null}\n        <Sprite\n          textureData={textureData}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onMouseEnter={onMouseHoverTextureEnter}\n          onMouseLeave={onMouseHoverTextureLeave}\n          onTouchMove={onMouseHoverTextureEnter}\n          onTouchEnd={onMouseUp}\n          onTouchStart={onMouseDown}\n        ></Sprite>\n      </div>\n    )\n  }\n}\n\nexport default Texture\n","export const CONSTANTS = {\n  PLAYER: \"player\",\n  THIEF: \"thief\",\n  OVERLAY: \"overLay\",\n  TEXTURE: \"texture\",\n  HEALTH: \"health\",\n  SPEED: \"speed\"\n}\n","import { CONSTANTS } from \"./Constants\"\n\nexport const CONFIG = {\n  DEFAULT_PLAYER_SPEED: 1,\n  DEFAULT_THIEF_SPEED: 0,\n  DEFAULT_PLAYER_HEALTH: 5,\n  DEFAULT_THIEF_HEALTH: 100,\n  MAIN_APP_COLOR: \"#1b2a41\",\n  DEFAULT_SELECTED_LEVEL: 1,\n  DEFAULT_SEARCH_PRIORITY: CONSTANTS.HEALTH,\n  EDITING_BORDER: \"5px solid purple\"\n}\n","import React, { Component } from \"react\"\nimport Texture from \"./Texture\"\nimport { TEXTURES } from \"../Constants/Textures\"\nimport styled from \"styled-components\"\n\nconst CharacterSprite = styled.div`\n  position: absolute;\n`\nexport class Character extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      walking: false,\n      currentTexture: TEXTURES[props.type.toUpperCase() + \"_IDLE\"],\n      currentMovementSpeed: this.props.movementSpeed\n    }\n    this.takeAction = this.takeAction.bind(this)\n    this.setCorrectTexture = this.setCorrectTexture.bind(this)\n    this.setCorrectDirection = this.setCorrectDirection.bind(this)\n    this.doNextAction = this.doNextAction.bind(this)\n  }\n\n  doNextAction() {\n    let action = this.props.getNextAction(this.props.type)\n    let typeUpperCase = this.props.type.toUpperCase()\n    if (action[0] !== 0 || action[1] !== 0) {\n      this.setState({ walking: true })\n      this.takeAction(action)\n    } else if (this.state.currentTexture !== TEXTURES[typeUpperCase + \"_IDLE\"]) {\n      this.setState({ currentTexture: TEXTURES[typeUpperCase + \"_IDLE\"] })\n    }\n  }\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n  onClickRestart() {\n    let character = document.getElementById(this.props.type)\n    character.style.left = 0\n    character.style.top = 0\n    this.setState({ currentTexture: TEXTURES[this.props.type.toUpperCase() + \"_IDLE\"] })\n  }\n  componentDidUpdate() {\n    if (\n      !this.state.walking &&\n      this.props.inProgress &&\n      !this.props.paused &&\n      this.props.renderOnScreen\n    ) {\n      this.doNextAction()\n    }\n  }\n  setCorrectTexture(direction) {\n    let typeUpperCase = this.props.type.toUpperCase()\n    let texture =\n      direction[1] === -1 && direction[0] === 0\n        ? TEXTURES[typeUpperCase + \"_UP\"]\n        : direction[1] === 1 && direction[0] === 0\n        ? TEXTURES[typeUpperCase + \"_DOWN\"]\n        : TEXTURES[typeUpperCase + \"_RUNNING\"]\n    this.setState({ currentTexture: texture })\n  }\n  setCorrectDirection(entity, direction) {\n    if (entity !== null) {\n      if (direction[0] === -1) {\n        entity.style.transform = \"scaleX(-1)\"\n      } else {\n        entity.style.transform = \"scaleX(1)\"\n      }\n    }\n  }\n  takeAction(direction) {\n    this.setCorrectTexture(direction)\n    let character = document.getElementById(this.props.type)\n    this.setCorrectDirection(character.firstChild, direction)\n    let stepsCount = Math.floor(this.props.textureSize / this.props.movementSpeed)\n    let remainder = this.props.textureSize % this.props.movementSpeed\n\n    let counter = 0\n    this.setState({ currentMovementSpeed: this.props.movementSpeed })\n    var id = setInterval(frame.bind(this), 0)\n    function frame() {\n      if (counter === stepsCount || !this.props.inProgress) {\n        clearInterval(id)\n        character.style.left = character.offsetLeft + direction[0] * remainder + \"px\"\n        character.style.top = character.offsetTop + direction[1] * remainder + \"px\"\n        this.props.onCharacterFinishMove(this.props.type, direction)\n        this.setState({ walking: false })\n      } else {\n        counter++\n        character.style.left =\n          character.offsetLeft + direction[0] * this.state.currentMovementSpeed + \"px\"\n        character.style.top =\n          character.offsetTop + direction[1] * this.state.currentMovementSpeed + \"px\"\n      }\n    }\n  }\n  render() {\n    const {\n      initialCharacterLocation,\n      type,\n      textureSize,\n      xOffset,\n      yOffset,\n      onPlaceCharacter,\n      renderOnScreen,\n      healthBar,\n      currentHealth,\n      maxHealth\n    } = this.props\n    let healthBarPercentage = healthBar ? (currentHealth / maxHealth) * 100 : undefined\n    return (\n      <CharacterSprite id={type}>\n        {initialCharacterLocation !== null && renderOnScreen ? (\n          <Texture\n            x={initialCharacterLocation[0]}\n            y={initialCharacterLocation[1]}\n            healthBarPercentage={healthBarPercentage}\n            textureSize={textureSize}\n            xOffset={xOffset}\n            yOffset={yOffset}\n            type={type}\n            zIndex={2}\n            onMouseDown={() => onPlaceCharacter(type)}\n            texture={this.state.currentTexture}\n          ></Texture>\n        ) : null}\n      </CharacterSprite>\n    )\n  }\n}\n\nexport default Character\n","import { TEXTURES } from \"./Constants/Textures\"\nimport { CONSTANTS } from \"./Constants/Constants\"\nconst costToLocation = (from, to) => {\n  let dx = to[0] - from[0]\n  let dy = to[1] - from[1]\n  let distance = Math.sqrt(dx * dx + dy * dy)\n  return distance * 100\n}\nconst getActionType = action => {\n  return action[0] + action[1] === 0 || Math.abs(action[0] + action[1]) === 2\n    ? \"diagonal\"\n    : \"cardinal\"\n}\nconst isLegalAction = (x, y, action, state) => {\n  const destinationPos = { x: x + action[0], y: y + action[1] }\n  const actionType = getActionType(action)\n  if (isOutOfBoundaries(destinationPos, state.gridWidth, state.gridHeight)) return false\n  const isDestinationWall =\n    state.texturesMap[destinationPos.y * state.gridWidth + destinationPos.x] === TEXTURES.WALL\n  if (actionType === \"diagonal\") {\n    const isHorizontalWall =\n      state.texturesMap[y * state.gridWidth + destinationPos.x] === TEXTURES.WALL\n    const isVerticalWall =\n      state.texturesMap[destinationPos.y * state.gridWidth + x] === TEXTURES.WALL\n\n    return !(isHorizontalWall || isVerticalWall || isDestinationWall)\n  } else {\n    return !isDestinationWall\n  }\n}\nconst addToOpen = (nodeToAdd, open) => {\n  let added = false\n  // check if its already in the open list.\n  for (let index = 0; index < open.length; index++) {\n    let node = open[index]\n    if (\n      nodeToAdd.x === node.x &&\n      nodeToAdd.y === node.y &&\n      nodeToAdd.g >= node.g &&\n      nodeToAdd.health <= node.health\n    ) {\n      added = true\n      break\n    }\n  }\n  // if its not already in the open list add where it belongs based on the f value.\n  if (!added) {\n    const nodeToAddF = nodeToAdd.g + nodeToAdd.h\n    // keep going until the f value is more than or qrual to the one in the open list and that where you add the node.\n    for (let index = 0; index < open.length; index++) {\n      const node = open[index]\n      const nodeF = node.g + node.h\n      if (nodeToAddF >= nodeF) {\n        added = true\n        open.splice(index, 0, nodeToAdd)\n        break\n      }\n    }\n  }\n  // if was not added because it the smallest f then add it to the end..\n  if (!added) {\n    open.push(nodeToAdd)\n  }\n}\n\nconst getPath = node => {\n  let action = node.action\n  let parent = node.parent\n  while (parent !== null && parent.action !== null) {\n    action = parent.action\n    parent = parent.parent\n  }\n\n  return action\n}\nconst isOutOfBoundaries = (position, gridWidth, gridHeight) => {\n  return position.x < 0 || position.y < 0 || position.x >= gridWidth || position.y >= gridHeight\n}\nconst getNextThiefAction = (actions, state, props) => {\n  if (props.thiefSpeed === 0) return [0, 0]\n  let bestAction = [0, 0]\n  let thiefLocation = state.currentThiefLocation\n  let plyerLocation = state.currentPlayerLocation\n  let leastDistance = costToLocation(thiefLocation, plyerLocation)\n  for (let i = 0; i < actions.length; i++) {\n    let action = actions[i]\n    if (!isLegalAction(thiefLocation[0], thiefLocation[1], action, state)) continue\n    let newThiefLocation = [thiefLocation[0] + action[0], thiefLocation[1] + action[1]]\n    let distance = costToLocation(newThiefLocation, plyerLocation)\n    if (distance > leastDistance) {\n      leastDistance = distance\n      bestAction = action\n    }\n  }\n  return bestAction\n}\nconst getNextAction = (state, props, characterType) => {\n  let actions = [\n    [0, 1],\n    [0, -1],\n    [1, 0],\n    [-1, 0]\n  ]\n  let diagonalActions = [\n    [1, 1],\n    [-1, 1],\n    [1, -1],\n    [-1, -1]\n  ]\n  if (props.allowDiagonalActions) actions = actions.concat(diagonalActions)\n  if (characterType === CONSTANTS.THIEF) return getNextThiefAction(actions, state, props)\n  let start = state.currentPlayerLocation\n  let goal = state.currentThiefLocation\n  let foundPath = false\n  let bestPathNode = null\n  let bestPathFoundHealth = 0\n  //edge case when start is the goal.\n  if (start[0] === goal[0] && start[1] === goal[1]) {\n    return [0, 0]\n  }\n\n  let actionsCost = [100, 100, 100, 100, 144, 141, 141, 141]\n  let closed = [...new Array(state.gridWidth * state.gridHeight)].map(() =>\n    new Array(props.playerMaxHealth).fill(false)\n  )\n\n  let open = []\n  open.push(\n    new Node(\n      start[0],\n      start[1],\n      state.currentPlayerHealth,\n      null,\n      null,\n      0,\n      costToLocation(start, goal)\n    )\n  )\n  while (true) {\n    if (open.length === 0) {\n      if (foundPath) {\n        return getPath(bestPathNode)\n      }\n      return [0, 0]\n    }\n\n    let node = open.pop()\n    if (node.x === goal[0] && node.y === goal[1]) {\n      if (node.health === props.playerMaxHealth || props.searchPriority === CONSTANTS.SPEED) {\n        return getPath(node)\n      } else if (node.health > bestPathFoundHealth) {\n        foundPath = true\n        bestPathFoundHealth = node.health\n        bestPathNode = node\n      }\n    }\n\n    // checks if node in closed, where closed is an array with true false values for any state at x,y by accessing index at y * the with + x\n    if (closed[node.y * state.gridWidth + node.x][node.health - 1]) {\n      continue\n    }\n\n    closed[node.y * state.gridWidth + node.x][node.health - 1] = true\n    if (node.health <= 0) continue\n    actions.forEach((action, index) => {\n      if (isLegalAction(node.x, node.y, action, state)) {\n        const newLocation = { x: node.x + action[0], y: node.y + action[1] }\n        let g = node.g + actionsCost[index]\n        const h = costToLocation([newLocation.x, newLocation.y], goal)\n        const healthPackOnLocation =\n          state.overLayMap[newLocation.y * state.gridWidth + newLocation.x] === TEXTURES.HEALTH_PACK\n        const isLava =\n          state.texturesMap[newLocation.y * state.gridWidth + newLocation.x] === TEXTURES.LAVA\n\n        const health = healthPackOnLocation\n          ? props.playerMaxHealth\n          : isLava\n          ? node.health - 1\n          : node.health\n        if (isLava && !healthPackOnLocation) g += 20\n\n        const newNode = new Node(newLocation.x, newLocation.y, health, node, action, g, h)\n        addToOpen(newNode, open)\n      }\n    })\n  }\n}\n\nclass Node {\n  constructor(x, y, health, parent, action, g, h) {\n    this.x = x\n    this.y = y\n    this.health = health\n    this.action = action\n    this.parent = parent\n    this.g = g\n    this.h = h\n  }\n}\nexport default getNextAction\n","const calculateBestTextureSize = window => {\n  const height = window.screen.height - 300\n  const width = window.screen.width\n  const higherValue = height > width ? height : width\n\n  return higherValue / 20\n}\nconst calculateMaxTextureSize = window => {\n  const height = window.screen.height - 300\n  const width = window.screen.width\n  return Math.floor(Math.min(...[height / 4, width / 4]))\n}\nconst calculateMinTextureSize = window => {\n  const height = window.screen.height - 300\n  const width = window.screen.width\n\n  return Math.floor(Math.max(...[height / 50, width / 50]))\n}\nexport { calculateMinTextureSize, calculateBestTextureSize, calculateMaxTextureSize }\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport Texture from \"./Texture\"\nimport { TEXTURES, TEXTURE_DATA } from \"../Constants/Textures\"\nimport { CONFIG } from \"../Constants/Config\"\nimport Character from \"./Character\"\nimport getNextAction from \"../AStar.js\"\nimport { Modal, Button, Typography } from \"antd\"\n\nimport { CONSTANTS } from \"../Constants/Constants\"\nimport queryString from \"query-string\"\nimport {\n  calculateBestTextureSize,\n  calculateMaxTextureSize,\n  calculateMinTextureSize\n} from \"../HelperFunctions\"\n\nconst Container = styled.div`\n  flex: 1;\n  position: relative;\n  background-image: url(\"background.png\");\n`\nconst EditorDoneButton = styled(Button)`\n  border-radius: 20px !important;\n`\nconst EditorContainer = styled.div`\n  width: 80px;\n  height: 380px;\n  position: absolute;\n  display: flex;\n  padding: 15px 0;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  left: ${props => (props.expanded ? 0 : -70)}px;\n  transition: left 1s;\n  top: ${props => props.top}px;\n  border-radius: 10px;\n  z-index: 4;\n  background-color: ${CONFIG.MAIN_APP_COLOR};\n`\nconst EditorArrow = styled(Button)`\n  position: absolute !important;\n  transform: ${props => (props.expanded === \"true\" ? \"rotateZ(-180deg)\" : \"\")};\n  transition: transform 1s;\n  left: 68px;\n  &:focus,\n  &:active {\n    color: white !important;\n    border-color: white !important;\n  }\n  &:hover {\n    color: #40a9ff !important;\n    border-color: #40a9ff !important;\n  }\n  top: 25px;\n`\nconst TextureLabel = styled(Typography.Text)`\n  color: white !important;\n  margin-bottom: 5px;\n`\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 10px;\n  cursor: pointer;\n`\nexport class Grid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      texturesMap: [],\n      overLayMap: [],\n      edits: [],\n      modalMessage: \"\",\n      showModal: false,\n      gridWidth: 0,\n      editorExpanded: true,\n      finishAfterNextAnimation: false,\n      gridHeight: 0,\n      xOffset: 0,\n      yOffset: 0,\n      initialPlayerLocation: null,\n      currentPlayerLocation: null,\n      initialThiefLocation: null,\n      currentThiefLocation: null,\n      currentPlayerHealth: props.playerMaxHealth,\n      currentThiefHealth: props.thiefMaxHealth,\n      mouseOverX: null,\n      mouseOverY: null,\n      mouseDown: false\n    }\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onMouseHoverTextureEnter = this.onMouseHoverTextureEnter.bind(this)\n    this.onMouseHoverTextureLeave = this.onMouseHoverTextureLeave.bind(this)\n    this.onPlaceCharacter = this.onPlaceCharacter.bind(this)\n    this.handleHoverWhilePlacingCharacter = this.handleHoverWhilePlacingCharacter.bind(this)\n    this.getNextCharacterAction = this.getNextCharacterAction.bind(this)\n    this.setCharacterCurrentHealth = this.setCharacterCurrentHealth.bind(this)\n    this.onCharacterFinishMove = this.onCharacterFinishMove.bind(this)\n    this.updateURL = this.updateURL.bind(this)\n  }\n\n  setCharacterCurrentHealth(character, value) {\n    let capitalized = character.charAt(0).toUpperCase() + character.slice(1)\n    this.setState({ [\"current\" + capitalized + \"Health\"]: value })\n  }\n  onMouseDown(e, x, y) {\n    e.persist()\n    this.setState({ mouseDown: true }, () => {\n      this.onMouseHoverTextureEnter(e, x, y)\n    })\n  }\n  onPlaceCharacter() {\n    this.props.setSelectedEditTexture(null)\n  }\n  onMouseUp() {\n    this.setState({ mouseDown: false })\n  }\n  handleHoverWhilePlacingCharacter(characterType, x, y) {\n    if (characterType === TEXTURES.THIEF_IDLE) {\n      this.resetCharactersLocation(CONSTANTS.THIEF)\n      this.setState({ initialThiefLocation: [x, y], currentThiefLocation: [x, y] })\n    }\n    if (characterType === TEXTURES.PLAYER_IDLE) {\n      this.resetCharactersLocation(CONSTANTS.PLAYER)\n      this.setState({ initialPlayerLocation: [x, y], currentPlayerLocation: [x, y] })\n    }\n  }\n  resetCharactersLocation(character) {\n    if (character === CONSTANTS.PLAYER) {\n      let player = document.getElementById(CONSTANTS.PLAYER)\n      player.style.left = 0\n      player.style.top = 0\n    } else {\n      let thief = document.getElementById(CONSTANTS.THIEF)\n      thief.style.left = 0\n      thief.style.top = 0\n    }\n  }\n  handleFollowCursor(x, y) {\n    this.resetCharactersLocation(CONSTANTS.THIEF)\n    this.setState({ initialThiefLocation: [x, y], currentThiefLocation: [x, y] })\n  }\n\n  updateURL() {\n    let newURLObject = {\n      playerSpeed: this.props.playerSpeed,\n      playerMaxHealth: this.props.playerMaxHealth,\n      initialTexturesMap: this.state.texturesMap,\n      searchPriority: this.props.searchPriority,\n      allowDiagonalActions: this.props.allowDiagonalActions,\n      initialOverLayMap: this.state.overLayMap,\n      minHeight: window.screen.height,\n      minWidth: window.screen.width,\n      thiefSpeed: this.props.thiefSpeed,\n      textureSize: this.props.textureSize,\n      firstRenderPlayerLocation: this.state.initialPlayerLocation,\n      firstRenderThiefLocation: this.state.initialThiefLocation\n    }\n\n    window.history.replaceState(\n      {},\n      null,\n      \"?\" +\n        queryString.stringify(newURLObject, {\n          arrayFormat: \"comma\"\n        })\n    )\n  }\n\n  onMouseHoverTextureEnter(e, x, y) {\n    const { selectedEditTexture, editing, followCursor, textureSize } = this.props\n    const {\n      texturesMap,\n      mouseDown,\n      edits,\n      overLayMap,\n      xOffset,\n      yOffset,\n      gridWidth,\n      gridHeight\n    } = this.state\n    let index = y * gridWidth + x\n    if (e.type === \"touchmove\") {\n      let touchX = Math.floor((e.touches[0].pageX - xOffset) / textureSize)\n      let touchY = Math.floor((e.touches[0].pageY - yOffset) / textureSize)\n      if (touchX >= gridWidth || touchY >= gridHeight) return\n      index = touchY * gridWidth + touchX\n    }\n    if (\n      selectedEditTexture === TEXTURES.PLAYER_IDLE ||\n      selectedEditTexture === TEXTURES.THIEF_IDLE\n    ) {\n      this.handleHoverWhilePlacingCharacter(selectedEditTexture, x, y)\n    } else if (editing) {\n      if (e.target !== null && !(\"ontouchstart\" in window)) {\n        e.target.parentElement.style.border = CONFIG.EDITING_BORDER\n      }\n      if (selectedEditTexture === TEXTURES.HEALTH_PACK) {\n        if (mouseDown) {\n          let newOverLayMap = overLayMap.slice()\n          newOverLayMap[index] =\n            overLayMap[index] === TEXTURES.HEALTH_PACK ? TEXTURES.TRANSPARENT : selectedEditTexture\n          this.setState({\n            overLayMap: newOverLayMap,\n            mouseOverX: x,\n            mouseOverY: y,\n            mouseDown: false,\n            edits: [...edits, { type: CONSTANTS.OVERLAY, texture: overLayMap[index], x, y }]\n          })\n        } else {\n          this.setState({ mouseOverX: x, mouseOverY: y })\n        }\n      } else if (texturesMap[index] !== selectedEditTexture) {\n        if (mouseDown) {\n          let newTexturesMap = texturesMap.slice()\n          newTexturesMap[index] = selectedEditTexture\n          this.setState({\n            texturesMap: newTexturesMap,\n            mouseOverX: x,\n            mouseOverY: y,\n            edits: [...edits, { type: CONSTANTS.TEXTURE, texture: texturesMap[index], x, y }]\n          })\n        } else {\n          this.setState({ mouseOverX: x, mouseOverY: y })\n        }\n      }\n    } else if (followCursor) {\n      this.handleFollowCursor(x, y)\n    }\n  }\n  onMouseHoverTextureLeave(e) {\n    if (this.props.editing) {\n      this.setState({ mouseOverX: null, mouseOverY: null })\n      e.target.parentElement.style.border = \"0\"\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.textureSize !== this.props.textureSize) {\n      this.initializeGridWithTextureSize(this.props.textureSize)\n    }\n    if (prevProps.playerMaxHealth !== this.props.playerMaxHealth) {\n      this.setState({ currentPlayerHealth: this.props.playerMaxHealth })\n    }\n  }\n\n  initializeGridWithTextureSize(textureSize, tMap, oMap, useURL) {\n    let gridWidth = Math.floor(this.container.offsetWidth / textureSize)\n    let gridHeight = Math.floor(this.container.offsetHeight / textureSize)\n    let xOffset = (this.container.offsetWidth % textureSize) / 2\n    let yOffset = (this.container.offsetHeight % textureSize) / 2\n    let playerLocation =\n      useURL !== undefined && this.props.firstRenderPlayerLocation !== null\n        ? this.props.firstRenderPlayerLocation\n        : [0, 0]\n    let thiefLocation =\n      useURL !== undefined && this.props.firstRenderThiefLocation !== null\n        ? this.props.firstRenderThiefLocation\n        : [gridWidth - 1, 0]\n    let texturesMap =\n      tMap === undefined\n        ? new Array(gridWidth * gridHeight).fill(TEXTURES.OBSIDIAN)\n        : new Array(gridWidth * gridHeight).fill(TEXTURES.OBSIDIAN).map((value, index) => {\n            return tMap[index] !== undefined ? tMap[index] : value\n          })\n    let overLayMap =\n      oMap === undefined\n        ? new Array(gridWidth * gridHeight).fill(TEXTURES.TRANSPARENT)\n        : new Array(gridWidth * gridHeight).fill(TEXTURES.TRANSPARENT).map((value, index) => {\n            return oMap[index] !== undefined ? oMap[index] : value\n          })\n\n    this.setState({\n      texturesMap: texturesMap,\n      overLayMap: overLayMap,\n      gridWidth,\n      gridHeight,\n      xOffset,\n      yOffset,\n      initialPlayerLocation: playerLocation,\n      initialThiefLocation: thiefLocation,\n      currentPlayerLocation: playerLocation,\n      currentThiefLocation: thiefLocation,\n      currentPlayerHealth: this.props.playerMaxHealth,\n      currentThiefHealth: this.props.thiefMaxHealth,\n      edits: []\n    })\n    this.props.envIsReady()\n  }\n\n  getNextCharacterAction(type) {\n    let action = getNextAction(this.state, this.props, type)\n    if (action[0] !== 0 || action[1] !== 0) {\n      if (type === CONSTANTS.PLAYER) {\n        let newPosition = [\n          this.state.currentPlayerLocation[0] + action[0],\n          this.state.currentPlayerLocation[1] + action[1]\n        ]\n        this.setState({ currentPlayerLocation: newPosition })\n      } else {\n        let newPosition = [\n          this.state.currentThiefLocation[0] + action[0],\n          this.state.currentThiefLocation[1] + action[1]\n        ]\n        this.setState({ currentThiefLocation: newPosition })\n      }\n    }\n\n    return action\n  }\n  undoEdit() {\n    if (this.state.edits.length > 0) {\n      let editsCopy = this.state.edits.slice()\n      let editToUndo = editsCopy.pop()\n      let index = editToUndo.y * this.state.gridWidth + editToUndo.x\n      if (editToUndo.type === CONSTANTS.TEXTURE) {\n        let texturesMapCopy = this.state.texturesMap.slice()\n        texturesMapCopy[index] = editToUndo.texture\n        this.setState({ texturesMap: texturesMapCopy, edits: editsCopy })\n      } else if (editToUndo.type === CONSTANTS.OVERLAY) {\n        let overLayMapCopy = this.state.overLayMap.slice()\n        overLayMapCopy[index] = editToUndo.texture\n        this.setState({ overLayMap: overLayMapCopy, edits: editsCopy })\n      }\n    }\n  }\n  componentDidMount() {\n    let validTextureSize =\n      this.props.textureSize >= calculateMinTextureSize(window) &&\n      this.props.textureSize <= calculateMaxTextureSize(window)\n    let mapCanFit =\n      this.props.URLParams.minHeight < window.screen.height &&\n      this.props.URLParams.minWidth < window.screen.width\n    if (validTextureSize && mapCanFit) {\n      if (this.props.initialTexturesMap.length > 0 && this.props.initialOverLayMap.length > 0) {\n        this.initializeGridWithTextureSize(\n          this.props.textureSize,\n          this.props.initialTexturesMap,\n          this.props.initialOverLayMap,\n          true\n        )\n      } else {\n        this.initializeGridWithTextureSize(this.props.textureSize)\n      }\n    } else {\n      if (!mapCanFit && this.props.URLParams.initialTexturesMap !== undefined) {\n        this.setState({\n          showModal: true,\n          modalMessage:\n            \"We could not load the map from the link, the map was created on a screen bigger than the one you are using currently. Try again using a bigger screen.\"\n        })\n      }\n      this.initializeGridWithTextureSize(this.props.textureSize)\n    }\n    this.props.onRef(this)\n    window.addEventListener(\"resize\", e =>\n      this.initializeGridWithTextureSize(this.props.textureSize)\n    )\n  }\n  onCharacterFinishMove(characterType, action) {\n    const { overLayMap, currentPlayerLocation, currentThiefLocation, texturesMap } = this.state\n    let capitalized = characterType.charAt(0).toUpperCase() + characterType.slice(1)\n    let characterLocation = this.state[\"current\" + capitalized + \"Location\"]\n    let currentCharacterHealth = this.state[\"current\" + capitalized + \"Health\"]\n    let index = characterLocation[1] * this.state.gridWidth + characterLocation[0]\n    if (texturesMap[index] === TEXTURES.LAVA) {\n      this.setCharacterCurrentHealth(characterType, currentCharacterHealth - 1)\n    }\n    if (overLayMap[index] === TEXTURES.HEALTH_PACK) {\n      let newOverLayMap = overLayMap.slice()\n      newOverLayMap[index] = TEXTURES.TRANSPARENT\n      this.setState({\n        overLayMap: newOverLayMap\n      })\n      this.setCharacterCurrentHealth(characterType, this.props.playerMaxHealth)\n    }\n    if (this.state.finishAfterNextAnimation) {\n      this.props.onFinishGame()\n      this.props.onClickRestart()\n    }\n    if (\n      currentPlayerLocation[0] === currentThiefLocation[0] &&\n      currentPlayerLocation[1] === currentThiefLocation[1]\n    ) {\n      if (this.props.thiefSpeed === 0) {\n        this.props.onFinishGame()\n        this.props.onClickRestart()\n      } else if (characterType === CONSTANTS.PLAYER && !this.props.followCursor) {\n        this.setState({ finishAfterNextAnimation: true })\n      }\n    }\n    if (\n      currentPlayerLocation[0] === currentThiefLocation[0] &&\n      currentPlayerLocation[1] === currentThiefLocation[1] &&\n      characterType === CONSTANTS.PLAYER &&\n      !this.props.followCursor\n    ) {\n      this.setState({ finishAfterNextAnimation: true })\n    }\n  }\n  onSelectCustomLevel(levelData) {\n    this.initializeGridWithTextureSize(\n      levelData.textureSize,\n      levelData.initialTexturesMap,\n      levelData.initialOverLayMap,\n      true\n    )\n  }\n  onClickTexture(texture) {\n    this.props.setEditing(true)\n    this.props.setSelectedEditTexture(texture)\n  }\n  onClickRestart() {\n    this.player.onClickRestart()\n    this.thief.onClickRestart()\n    this.setState({\n      currentPlayerLocation: this.state.initialPlayerLocation,\n      currentThiefLocation: this.state.initialThiefLocation,\n      currentPlayerHealth: this.props.playerMaxHealth,\n      currentThiefHealth: this.props.thiefMaxHealth,\n      finishAfterNextAnimation: false\n    })\n  }\n  render() {\n    const {\n      gridWidth,\n      xOffset,\n      yOffset,\n      texturesMap,\n      overLayMap,\n      mouseOverX,\n      mouseOverY,\n      initialPlayerLocation,\n      initialThiefLocation,\n      showModal,\n      modalMessage,\n      currentPlayerHealth,\n      editorExpanded\n    } = this.state\n    const {\n      textureSize,\n      inProgress,\n      paused,\n      followCursor,\n      editing,\n      selectedEditTexture,\n      playerSpeed,\n      setEditing,\n      playerMaxHealth,\n      thiefSpeed\n    } = this.props\n    let isEditingOverLay = selectedEditTexture === TEXTURES.HEALTH_PACK\n    return (\n      <Container onMouseLeave={this.onMouseUp} ref={el => (this.container = el)}>\n        <Modal\n          closable={false}\n          footer={[\n            <Button type=\"primary\" onClick={() => this.setState({ showModal: false })}>\n              Ok\n            </Button>\n          ]}\n          title={\"Sorry\"}\n          visible={showModal}\n        >\n          {modalMessage}\n        </Modal>\n        <EditorContainer\n          top={this.container !== undefined ? this.container.offsetHeight / 2 : 0}\n          expanded={editorExpanded}\n        >\n          <EditorArrow\n            expanded={editorExpanded ? \"true\" : \"false\"}\n            onClick={() => this.setState({ editorExpanded: !editorExpanded })}\n            size=\"small\"\n            shape=\"circle\"\n            ghost=\"true\"\n            icon=\"arrow-right\"\n          ></EditorArrow>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.OBSIDIAN)}\n            src={TEXTURE_DATA[TEXTURES.OBSIDIAN].src}\n          ></Image>\n          <TextureLabel>Obsidian</TextureLabel>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.LAVA)}\n            src={TEXTURE_DATA[TEXTURES.LAVA].src}\n          ></Image>\n          <TextureLabel>Lava</TextureLabel>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.WALL)}\n            src={TEXTURE_DATA[TEXTURES.WALL].src}\n          ></Image>\n          <TextureLabel>Wall</TextureLabel>\n          <Image\n            onClick={() => this.onClickTexture(TEXTURES.HEALTH_PACK)}\n            src={TEXTURE_DATA[TEXTURES.WALL].src}\n          ></Image>\n          <TextureLabel>Health</TextureLabel>\n          <EditorDoneButton\n            onClick={() => {\n              setEditing(false)\n              this.setState({ editorExpanded: false })\n            }}\n            size=\"small\"\n          >\n            Done\n          </EditorDoneButton>\n        </EditorContainer>\n        {texturesMap.map((texture, index) => {\n          const x = index % gridWidth\n          const y = Math.floor(index / gridWidth)\n          let isBeingEdited = editing && mouseOverX === x && mouseOverY === y\n          return (\n            <Texture\n              x={x}\n              y={y}\n              key={index}\n              textureSize={textureSize}\n              xOffset={xOffset}\n              zIndex={1}\n              yOffset={yOffset}\n              texture={isBeingEdited && !isEditingOverLay ? selectedEditTexture : texture}\n            ></Texture>\n          )\n        })}\n        {overLayMap.map((overLayTexture, index) => {\n          const x = index % gridWidth\n          const y = Math.floor(index / gridWidth)\n          let isBeingEdited = editing && mouseOverX === x && mouseOverY === y\n          return (\n            <Texture\n              x={x}\n              y={y}\n              key={index}\n              onMouseHoverTextureEnter={e => this.onMouseHoverTextureEnter(e, x, y)}\n              onMouseHoverTextureLeave={e => this.onMouseHoverTextureLeave(e)}\n              textureSize={textureSize}\n              onMouseDown={e => this.onMouseDown(e, x, y)}\n              zIndex={2}\n              onMouseUp={this.onMouseUp}\n              xOffset={xOffset}\n              yOffset={yOffset}\n              texture={isBeingEdited && isEditingOverLay ? selectedEditTexture : overLayTexture}\n            ></Texture>\n          )\n        })}\n        <Character\n          xOffset={xOffset}\n          yOffset={yOffset}\n          onRef={ref => (this.player = ref)}\n          onPlaceCharacter={this.onPlaceCharacter}\n          initialCharacterLocation={initialPlayerLocation}\n          textureSize={textureSize}\n          movementSpeed={playerSpeed}\n          inProgress={inProgress}\n          paused={paused}\n          getNextAction={this.getNextCharacterAction}\n          onCharacterFinishMove={this.onCharacterFinishMove}\n          currentHealth={currentPlayerHealth}\n          maxHealth={playerMaxHealth}\n          renderOnScreen={true}\n          healthBar={true}\n          type={CONSTANTS.PLAYER}\n        ></Character>\n        <Character\n          xOffset={xOffset}\n          yOffset={yOffset}\n          onRef={ref => (this.thief = ref)}\n          onPlaceCharacter={this.onPlaceCharacter}\n          initialCharacterLocation={initialThiefLocation}\n          textureSize={textureSize}\n          movementSpeed={thiefSpeed}\n          onCharacterFinishMove={this.onCharacterFinishMove}\n          inProgress={inProgress}\n          paused={paused}\n          getNextAction={this.getNextCharacterAction}\n          renderOnScreen={!followCursor}\n          type={CONSTANTS.THIEF}\n        ></Character>\n      </Container>\n    )\n  }\n}\n\nexport default Grid\n","export const BREAKPOINTS = {\n  MEDIUM_WIDTH: \"1100px\",\n  SMALL_WIDTH: \"900px\",\n  VERY_SMALL_WIDTH: \"720px\",\n  MEDIUM_HEIGHT: \"960px\",\n  SMALL_HEIGHT: \"820px\",\n  VERY_SMALL_HEIGHT: \"700px\"\n}\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport { Slider, Button, Typography, Radio, Tooltip, Modal, Input } from \"antd\"\nimport { CONSTANTS } from \"../Constants/Constants\"\nimport { CONFIG } from \"../Constants/Config\"\nimport { TEXTURES } from \"../Constants/Textures\"\nimport { BREAKPOINTS } from \"../Constants/BreakPoints\"\n\nimport { calculateMaxTextureSize, calculateMinTextureSize } from \"../HelperFunctions\"\nconst Container = styled.div`\n  width: 100%;\n  height: fit-content;\n  background-color: ${CONFIG.MAIN_APP_COLOR};\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  padding-top: 15px;\n  @media (max-height: ${BREAKPOINTS.SMALL_HEIGHT}) {\n    font-size: 11px;\n  }\n  @media (max-width: ${BREAKPOINTS.SMALL_WIDTH}) {\n    font-size: 11px;\n  }\n`\nconst FlexDivCenter = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n  @media (max-height: ${BREAKPOINTS.MEDIUM_HEIGHT}) {\n    margin-bottom: 6px;\n  }\n  @media (max-height: ${BREAKPOINTS.SMALL_HEIGHT}) {\n    margin-bottom: 4px;\n  }\n  @media (max-height: ${BREAKPOINTS.VERY_SMALL_HEIGHT}) {\n    margin-bottom: 2px;\n  }\n`\nconst StyledText = styled(Typography.Text)`\n  color: white !important;\n`\nconst StyledGitButton = styled(Button)`\n  display: block;\n`\nconst StyledButton = styled(Button)`\n  @media (max-height: ${BREAKPOINTS.MEDIUM_HEIGHT}) {\n    height: 35px !important;\n  }\n  @media (max-height: ${BREAKPOINTS.SMALL_HEIGHT}) {\n    height: 30px !important;\n  }\n  @media (max-height: ${BREAKPOINTS.VERY_SMALL_HEIGHT}) {\n    height: 25px !important;\n  }\n  border-radius: 20px !important;\n  height: 43px !important;\n`\nconst Left = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  flex-direction: column;\n  flex-grow: 1;\n  height: 100%;\n  align-self: flex-start;\n  padding-top: 30px;\n`\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  flex-direction: column;\n  align-self: center;\n  flex-grow: 0.3;\n`\nconst Right = styled.div`\n  display: flex;\n  height: 100%;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin: auto;\n  flex-direction: column;\n  flex-grow: 1;\n  align-self: flex-end;\n  padding-top: 30px;\n`\nconst Label = styled(Typography.Text)`\n  margin-left: 6px;\n  margin-right: 6px;\n  display: inline-block;\n  width: 20%;\n  color: white !important;\n`\nconst StyledSlider = styled(Slider)`\n  width: 70%;\n  display: inline-block;\n  min-width: 50px;\n  margin: 0 !important;\n`\nconst SliderContainer = styled.div`\n  width: 100%;\n  margin-bottom: 60px;\n  @media (max-width: ${BREAKPOINTS.VERY_SMALL_WIDTH}) {\n    margin-bottom: 0;\n  }\n  display: flex;\n  align-items: center;\n`\nconst StyledTitle = styled(Typography.Title)`\n  color: white !important;\n`\nconst LeftRightContainer = styled.div`\n  width: 60%;\n  @media (max-width: ${BREAKPOINTS.MEDIUM_WIDTH}) {\n    width: 100%;\n  }\n  display: flex;\n  flex-direction: column;\n`\nconst PlayButton = styled(Button)`\n  margin: ${props => props.margin};\n  font-size: ${props => props.fontSize + \"px !important\"};\n  @media (max-height: ${BREAKPOINTS.MEDIUM_HEIGHT}) {\n    font-size: 25px !important;\n  }\n  height: fit-content !important;\n  width: fit-content !important;\n  &:focus,\n  &:active {\n    color: white !important;\n  }\n  &:hover {\n    color: #40a9ff !important;\n  }\n`\nconst playerMaxHealth = (props, smallScreen) => {\n  const component = [\n    <Label key=\"playerMaxHealthLabel\">{smallScreen ? \"Player Max Health\" : \"Max Health\"}</Label>,\n    <StyledSlider\n      key=\"playerMaxHealthSlider\"\n      onChange={value => props.setCharacterMaxHealth(CONSTANTS.PLAYER, value)}\n      value={props.playerMaxHealth}\n      disabled={props.inProgress}\n      min={1}\n      max={10}\n      step={1}\n      tooltipPlacement={\"top\"}\n    />\n  ]\n  return smallScreen ? (\n    component\n  ) : (\n    <Tooltip placement=\"topLeft\" title=\"Changes The Player Max Health \">\n      <SliderContainer>{component.map(item => item)}</SliderContainer>\n    </Tooltip>\n  )\n}\nconst playerSpeed = (props, smallScreen) => {\n  const component = [\n    <Label key=\"playerSpeedLabel\">{smallScreen ? \"Player Speed\" : \"Speed\"}</Label>,\n    <StyledSlider\n      key=\"playerSpeedSlider\"\n      onChange={speed => props.setCharacterSpeed(CONSTANTS.PLAYER, speed)}\n      value={props.playerSpeed}\n      min={1}\n      max={4}\n      step={1}\n      tooltipPlacement={\"top\"}\n    />\n  ]\n\n  return smallScreen ? (\n    component\n  ) : (\n    <Tooltip placement=\"topLeft\" title=\"Changes The Player Movement Speed\">\n      <SliderContainer>{component.map(item => item)}</SliderContainer>\n    </Tooltip>\n  )\n}\nconst thiefSpeed = (props, smallScreen) => {\n  const component = [\n    <Label key=\"thiefSpeedLabel\">{smallScreen ? \"Thief Speed\" : \"Speed\"}</Label>,\n    <StyledSlider\n      key=\"thiefSpeedSlider\"\n      onChange={speed => props.setCharacterSpeed(CONSTANTS.THIEF, speed)}\n      value={props.thiefSpeed}\n      min={0}\n      max={4}\n      step={1}\n      tooltipPlacement={\"top\"}\n    />\n  ]\n\n  return smallScreen ? (\n    component\n  ) : (\n    <Tooltip placement=\"topLeft\" title=\"Changes The Thief Movement Speed, Set to 0 To Stay Still\">\n      <SliderContainer>{component.map(item => item)}</SliderContainer>\n    </Tooltip>\n  )\n}\nconst getPlayButton = props => {\n  return props.inProgress ? (\n    <div>\n      <PlayButton\n        disabled={!props.ready}\n        type={\"link\"}\n        fontSize={30}\n        onClick={() => (props.paused ? props.onClickResume() : props.onClickPause())}\n        ghost={true}\n        margin={\"0 4px 0 15px\"}\n        icon={props.paused ? \"play-circle\" : \"pause-circle\"}\n      ></PlayButton>\n      <PlayButton\n        disabled={!props.ready}\n        type={\"link\"}\n        fontSize={30}\n        onClick={() => props.onClickRestart()}\n        margin={\"0 15px 0 4px\"}\n        ghost={true}\n        icon={\"stop\"}\n      ></PlayButton>\n    </div>\n  ) : (\n    <PlayButton\n      disabled={!props.ready}\n      type={\"link\"}\n      ghost={true}\n      fontSize={35}\n      margin={\"0 15px 0 15px\"}\n      onClick={() => props.onClickStart()}\n      icon={\"play-circle\"}\n    ></PlayButton>\n  )\n}\nexport default class Footer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      minTextureSize: calculateMinTextureSize(window),\n      maxTextureSize: calculateMaxTextureSize(window)\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", e => {\n      this.setState({\n        minTextureSize: calculateMinTextureSize(window),\n        maxTextureSize: calculateMaxTextureSize(window)\n      })\n    })\n  }\n  copyLinkToClipBoard() {\n    let el = document.getElementById(\"shareLinkInput\")\n    el.select()\n    el.setSelectionRange(0, 99999)\n    document.execCommand(\"copy\")\n  }\n  render() {\n    console.log(window.screen.width)\n    const smallScreenWidth = window.screen.width <= parseInt(BREAKPOINTS.VERY_SMALL_WIDTH, 10)\n    const smallScreenHeight = window.screen.height <= parseInt(BREAKPOINTS.SMALL_HEIGHT, 10)\n    const props = this.props\n    const { minTextureSize, maxTextureSize, showModal } = this.state\n    return (\n      <Container>\n        <Modal\n          closable={false}\n          footer={[\n            <Button key={1} type=\"primary\" onClick={() => this.setState({ showModal: false })}>\n              Ok\n            </Button>\n          ]}\n          visible={showModal}\n          title={\"Share Your Map!\"}\n        >\n          <Typography.Text>Copy This Link and Send it To your Friends</Typography.Text>\n          <div>\n            <Input\n              id={\"shareLinkInput\"}\n              style={{ margin: \"20px 20px 20px 0\", width: \"80%\" }}\n              defaultValue={window.location.href}\n            ></Input>\n            <Button onClick={() => this.copyLinkToClipBoard()} type=\"secondary\">\n              Copy\n            </Button>\n          </div>\n          <Typography.Text type={\"secondary\"}>\n            Note that your friend's screen needs to be at least as big as your screen to maintain\n            the shape of the map!\n          </Typography.Text>\n        </Modal>\n        {smallScreenWidth ? null : (\n          <Left>\n            <LeftRightContainer>\n              <FlexDivCenter>\n                <StyledTitle level={4}>Player Options</StyledTitle>\n              </FlexDivCenter>\n              {playerMaxHealth(props, false)}\n              {playerSpeed(props, false)}\n            </LeftRightContainer>\n          </Left>\n        )}\n\n        <Center>\n          <FlexDivCenter>\n            <Tooltip placement=\"top\" title=\"The Player Will Follow The Mouse Cursor on The Screen\">\n              <StyledButton onClick={() => props.enableFollowCursor()} style={{ margin: \"0\" }}>\n                Follow Cursor\n              </StyledButton>\n            </Tooltip>\n          </FlexDivCenter>\n          <FlexDivCenter>\n            <Tooltip placement=\"left\" title=\"Undo The Last Edit to The Map\">\n              <StyledButton onClick={() => props.onClickUndo()} style={{ margin: \"0 15px 0 0\" }}>\n                Undo Edit\n              </StyledButton>\n            </Tooltip>\n            {getPlayButton(props)}\n            <Tooltip placement=\"right\" title=\"Share This Map With a Friend\">\n              <StyledButton\n                onClick={() => {\n                  props.generateLink()\n                  this.setState({ showModal: true })\n                }}\n                style={{ margin: \"0 0 0 15px\" }}\n              >\n                Share Map\n              </StyledButton>\n            </Tooltip>\n          </FlexDivCenter>\n          <FlexDivCenter>\n            <Tooltip placement=\"left\" title=\"Position The Start Location of The Player\">\n              <StyledButton\n                onClick={() => props.setSelectedEditTexture(TEXTURES.PLAYER_IDLE)}\n                style={{ margin: \"0 10px 0 0\" }}\n              >\n                Place Player\n              </StyledButton>\n            </Tooltip>\n            <Tooltip placement=\"right\" title=\"Position The Start Location of The Thief\">\n              <StyledButton\n                onClick={() => props.setSelectedEditTexture(TEXTURES.THIEF_IDLE)}\n                style={{ margin: \"0 0 0 10px\" }}\n              >\n                Place Thief\n              </StyledButton>\n            </Tooltip>\n          </FlexDivCenter>\n          <Tooltip placement=\"right\" title=\"Changes The Grid Size\">\n            <FlexDivCenter>\n              <Label>Map Scale</Label>\n              <StyledSlider\n                min={minTextureSize}\n                max={maxTextureSize}\n                onChange={props.setTextureSize}\n                disabled={props.inProgress}\n                value={props.textureSize}\n                tooltipPlacement={\"top\"}\n              />\n            </FlexDivCenter>\n          </Tooltip>\n          {smallScreenWidth\n            ? [\n                <Tooltip key={1} placement=\"topLeft\" title=\"Changes The Player Max Health\">\n                  <FlexDivCenter>{playerMaxHealth(props, true)}</FlexDivCenter>\n                </Tooltip>,\n                <Tooltip key={2} placement=\"topLeft\" title=\"Changes The Player Movement Speed\">\n                  <FlexDivCenter>{playerSpeed(props, true)}</FlexDivCenter>\n                </Tooltip>,\n                <Tooltip\n                  key={3}\n                  placement=\"topLeft\"\n                  title=\"Changes The Thief Movement Speed, Set to 0 To Stay Still\"\n                >\n                  <FlexDivCenter>{thiefSpeed(props, true)}</FlexDivCenter>\n                </Tooltip>\n              ]\n            : null}\n\n          <Tooltip placement=\"right\" title=\"Loads a Pre Made Level Created By The Developer\">\n            <FlexDivCenter>\n              <Label style={{ width: \"30%\" }}>Pre made Levels</Label>\n              <Radio.Group\n                value={props.selectedLevel}\n                size={smallScreenHeight || smallScreenWidth ? \"small\" : \"default\"}\n                onChange={e => props.setSelectedLevel(e.target.value)}\n              >\n                <Radio.Button value={1}>1</Radio.Button>\n                <Radio.Button value={2}>2</Radio.Button>\n                <Radio.Button value={3}>3</Radio.Button>\n                <Radio.Button value={4}>4</Radio.Button>\n                <Radio.Button value={5}>5</Radio.Button>\n                <Radio.Button value={6}>6</Radio.Button>\n              </Radio.Group>\n            </FlexDivCenter>\n          </Tooltip>\n          <Tooltip\n            placement=\"right\"\n            title=\"Changes Wether The Player Maximizes Health or Minimizes Distance\"\n          >\n            <FlexDivCenter>\n              <Label style={{ width: \"30%\" }}>Search Priority</Label>\n              <Radio.Group\n                size={smallScreenHeight || smallScreenWidth ? \"small\" : \"default\"}\n                value={props.searchPriority}\n                onChange={e => props.setSearchPriority(e.target.value)}\n              >\n                <Radio.Button value={CONSTANTS.HEALTH}>HEALTH</Radio.Button>\n                <Radio.Button value={CONSTANTS.SPEED}>SPEED</Radio.Button>\n              </Radio.Group>\n            </FlexDivCenter>\n          </Tooltip>\n          <StyledText>Made By Mark Armanious © 2019</StyledText>\n          <StyledGitButton\n            href={\"https://github.com/markarmanus/path_finder\"}\n            target={\"_blank\"}\n            shape={\"circle\"}\n            ghost={true}\n            icon={\"github\"}\n            type={\"link\"}\n          ></StyledGitButton>\n        </Center>\n        {smallScreenWidth ? null : (\n          <Right>\n            <LeftRightContainer>\n              <FlexDivCenter>\n                <StyledTitle level={4}>Thief Options</StyledTitle>\n              </FlexDivCenter>\n              {thiefSpeed(props, false)}\n            </LeftRightContainer>\n          </Right>\n        )}\n      </Container>\n    )\n  }\n}\n","export const LEVELS = {\n  1: \"allowDiagonalActions=false&firstRenderPlayerLocation=0,0&firstRenderThiefLocation=28,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,2,2,1,2,1,2,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,2,1,2,2,2,2,1,2,2,2,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,1,2,2,1,1,2,1,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,1,2,1,2,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,2,2,1,2,2,2,2,2,1,2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,2,2,2,2,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&playerMaxHealth=5&playerSpeed=1&searchPriority=health&textureSize=66&thiefSpeed=1\",\n  2: \"allowDiagonalActions=false&firstRenderPlayerLocation=0,0&firstRenderThiefLocation=28,0&initialOverLayMapinitialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,1,2,1,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,2,2,2,1,2,1,2,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,1,2,1,1,2,1,2,2,1,1,2,1,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,1,2,1,2,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,2,1,2,1,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,2,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&playerMaxHealth=5&playerSpeed=1&searchPriority=health&textureSize=66&thiefSpeed=1\",\n  3: \"minWidth=1920&minHeight=600&allowDiagonalActions=true&firstRenderPlayerLocation=3,0&firstRenderThiefLocation=5,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&playerMaxHealth=10&playerSpeed=2&searchPriority=speed&textureSize=197&thiefSpeed=3\",\n  4: \"http://localhost:3000/?allowDiagonalActions=true&firstRenderPlayerLocation=0,0&firstRenderThiefLocation=11,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&minHeight=937&minWidth=1920&playerMaxHealth=10&playerSpeed=3&searchPriority=speed&textureSize=159&thiefSpeed=3\",\n  5: \"allowDiagonalActions=false&firstRenderPlayerLocation=3,2&firstRenderThiefLocation=5,0&initialOverLayMap=13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13&initialTexturesMap=1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1&playerMaxHealth=10&playerSpeed=4&searchPriority=health&textureSize=211&thiefSpeed=1\"\n}\n","import React, { Component } from \"react\"\nimport Grid from \"./Grid\"\nimport Footer from \"./Footer\"\nimport { CONFIG } from \"../Constants/Config\"\nimport styled from \"styled-components\"\nimport { TEXTURES } from \"../Constants/Textures\"\nimport queryString from \"query-string\"\nimport { LEVELS } from \"../Constants/Levels\"\nimport { message } from \"antd\"\nimport { calculateBestTextureSize } from \"../HelperFunctions\"\nimport \"antd/dist/antd.css\"\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n`\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    let params = this.parseLevelData(this.props.location.search)\n    this.state = {\n      textureSize: params.textureSize ? params.textureSize : calculateBestTextureSize(window),\n      selectedEditTexture: null,\n      editing: false,\n      selectedLevel: CONFIG.DEFAULT_SELECTED_LEVEL,\n      inProgress: false,\n      URLParams: params,\n      paused: false,\n      ready: false,\n      followCursor: false,\n      // allowDiagonalActions: params.allowDiagonalActions ? params.allowDiagonalActions : false,\n      initialTexturesMap: params.initialTexturesMap ? params.initialTexturesMap : [],\n      initialOverLayMap: params.initialOverLayMap ? params.initialOverLayMap : [],\n      playerSpeed: params.playerSpeed ? params.playerSpeed : CONFIG.DEFAULT_PLAYER_SPEED,\n      firstRenderPlayerLocation: params.firstRenderPlayerLocation\n        ? params.firstRenderPlayerLocation\n        : null,\n      firstRenderThiefLocation: params.firstRenderThiefLocation\n        ? params.firstRenderThiefLocation\n        : null,\n      playerMaxHealth: params.playerMaxHealth\n        ? params.playerMaxHealth\n        : CONFIG.DEFAULT_PLAYER_HEALTH,\n      searchPriority: params.searchPriority\n        ? params.searchPriority\n        : CONFIG.DEFAULT_SEARCH_PRIORITY,\n      thiefSpeed: params.thiefSpeed ? params.thiefSpeed : CONFIG.DEFAULT_THIEF_SPEED\n    }\n    this.onClickUndo = this.onClickUndo.bind(this)\n    this.setTextureSize = this.setTextureSize.bind(this)\n    this.setSelectedEditTexture = this.setSelectedEditTexture.bind(this)\n    this.setEditing = this.setEditing.bind(this)\n    this.onClickStart = this.onClickStart.bind(this)\n    this.onClickRestart = this.onClickRestart.bind(this)\n    this.onClickPause = this.onClickPause.bind(this)\n    this.onClickResume = this.onClickResume.bind(this)\n    this.setCharacterSpeed = this.setCharacterSpeed.bind(this)\n    this.envIsReady = this.envIsReady.bind(this)\n    this.enableFollowCursor = this.enableFollowCursor.bind(this)\n    this.setCharacterMaxHealth = this.setCharacterMaxHealth.bind(this)\n    this.setSearchPriority = this.setSearchPriority.bind(this)\n    this.onFinishGame = this.onFinishGame.bind(this)\n    this.generateLink = this.generateLink.bind(this)\n    this.setAllowDiagonalActions = this.setAllowDiagonalActions.bind(this)\n    this.setSelectedLevel = this.setSelectedLevel.bind(this)\n    this.parseLevelData = this.parseLevelData.bind(this)\n  }\n  parseLevelData(value) {\n    return queryString.parse(value, {\n      arrayFormat: \"comma\",\n      parseNumbers: true,\n      parseBooleans: true\n    })\n  }\n  setSelectedLevel(level) {\n    let levelData = this.parseLevelData(LEVELS[level])\n\n    if (levelData.minHeight <= window.screen.height && levelData.minWidth <= window.screen.width) {\n      this.setState({ selectedLevel: level, ...levelData }, () => {\n        this.grid.onSelectCustomLevel(levelData)\n      })\n    } else {\n      message.error(\"Your Screen is Too Small For This Map!\")\n    }\n  }\n  setAllowDiagonalActions(value) {\n    this.setState({ allowDiagonalActions: value })\n  }\n  onFinishGame() {\n    this.setState({ inProgress: false })\n  }\n  generateLink() {\n    this.grid.updateURL()\n  }\n  setCharacterMaxHealth(type, value) {\n    this.setState({ [type + \"MaxHealth\"]: value })\n  }\n  enableFollowCursor() {\n    if (this.state.ready) {\n      this.setState({ followCursor: true, inProgress: true })\n    }\n  }\n  setCharacterSpeed(type, speed) {\n    this.setState({ [type + \"Speed\"]: speed })\n  }\n  onClickUndo() {\n    this.grid.undoEdit()\n  }\n  setTextureSize(size) {\n    this.setState({ textureSize: size })\n    this.onClickRestart()\n  }\n  envIsReady() {\n    this.setState({ ready: true })\n  }\n  setEditing(value) {\n    this.setState({ editing: value })\n  }\n  setSelectedEditTexture(texture) {\n    let isEditing =\n      texture !== null && texture !== TEXTURES.PLAYER_IDLE && texture !== TEXTURES.THIEF_IDLE\n    this.setState({\n      selectedEditTexture: texture,\n      editing: isEditing\n    })\n  }\n  onClickStart() {\n    this.setState({ inProgress: true })\n  }\n  onClickRestart() {\n    this.setState({\n      paused: false,\n      inProgress: false,\n      selectedEditTexture: null,\n      editing: false,\n      followCursor: false\n    })\n    this.grid.onClickRestart()\n  }\n  onClickPause() {\n    this.setState({ paused: true })\n  }\n  onClickResume() {\n    this.setState({ paused: false })\n  }\n  setSearchPriority(value) {\n    this.setState({ searchPriority: value })\n  }\n  render() {\n    return (\n      <MainContainer>\n        <Grid onRef={ref => (this.grid = ref)} {...this.state} {...this}></Grid>\n        <Footer {...this} {...this.state}></Footer>\n      </MainContainer>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport AppRoute from \"./Components/AppRoute\"\n\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<AppRoute />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from \"react\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport App from \"./App\"\nexport default function AppRoute() {\n  return (\n    <Router>\n      <Route path={\"/\"} component={App}></Route>\n    </Router>\n  )\n}\n"],"sourceRoot":""}